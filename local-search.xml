<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>从绫开始的后台管理系统（四）</title>
    <link href="/2021/02/22/%E4%BB%8E%E7%BB%AB%E5%BC%80%E5%A7%8B%E7%9A%84%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <url>/2021/02/22/%E4%BB%8E%E7%BB%AB%E5%BC%80%E5%A7%8B%E7%9A%84%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我们开始正式写代码。</p><p>这一章主要讲前后端的工程结构设计和搭建。</p><a id="more"></a><h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><h3 id="工程结构"><a href="#工程结构" class="headerlink" title="工程结构"></a>工程结构</h3><p>工程结构这里我们使用pom管理的方式，项目结构我们采用DDD模型。</p><h4 id="parent工程"><a href="#parent工程" class="headerlink" title="parent工程"></a>parent工程</h4><p>我们创建一个parent用来管理子项目，依赖，属性以及打包方式。我们先预置三个子工程，core包负责核心配置，common包负责工具管理，system包负责对外提供服务。</p><p>parent的<code>packaging</code>为pom结构，它本身不对外提供功能，而是作为管理工程的工程。</p><p>依赖工程版本需要用<code>properties</code>维护起来，并用<code>$&#123;&#125;</code>的格式引用，这样改版本就可以做到统一修改，还有一些全局配置也可以放在<code>properties</code>中，供其他项目引用。</p><p>构建配置<code>build</code>这里我们会构建两个包<code>执行包</code>和<code>源码包</code>方便在其他子工程中查看源码，子工程可直接进行构建，不需要单独配置build。</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.4.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">/></span></span> <span class="token comment">&lt;!-- lookup parent from repository --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>cn.lm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modules</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">></span></span>0moe-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">></span></span>0moe-common<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">></span></span>0moe-system<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modules</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>redis-starter.version</span><span class="token punctuation">></span></span>2.4.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>redis-starter.version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>security-starter.version</span><span class="token punctuation">></span></span>2.4.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>security-starter.version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-starter.version</span><span class="token punctuation">></span></span>2.4.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-starter.version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mybatis-starter.version</span><span class="token punctuation">></span></span>2.1.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mybatis-starter.version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mysql-driver.version</span><span class="token punctuation">></span></span>8.0.23<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mysql-driver.version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lombok.version</span><span class="token punctuation">></span></span>1.18.18<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lombok.version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hutool.version</span><span class="token punctuation">></span></span>5.5.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>hutool.version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-api.version</span><span class="token punctuation">></span></span>4.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-api.version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>multi-redis-starter.version</span><span class="token punctuation">></span></span>1.0.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>multi-redis-starter.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;redis-starter.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-security<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;security-starter.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis.spring.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;mybatis-starter.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;mysql-driver.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;lombok.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/cn.hutool/hutool-all --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>cn.hutool<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hutool-all<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;hutool.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- servlet包 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>javax.servlet-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;servlet-api.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>                <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;web-starter.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>cn.lm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>0moe-multi-redis-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;multi-redis-starter.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">></span></span>$&#123;java.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">></span></span>$&#123;java.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>testSource</span><span class="token punctuation">></span></span>$&#123;java.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>testSource</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>testTarget</span><span class="token punctuation">></span></span>$&#123;java.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>testTarget</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!--配置生成源码包--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-source-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>attach-sources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">></span></span>jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="core工程"><a href="#core工程" class="headerlink" title="core工程"></a>core工程</h4><p>core工程负责各种核心组件的配置以及管理组件，以starter的形式向外部提供服务。<code>仅允许api服务引入一次</code></p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>cn.lm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>cn.lm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-security<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>javax.servlet-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>cn.lm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>0moe-multi-redis-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>cn.lm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>common<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>我们每个核心组件都会放在一个包中，并且在<code>CoreAutoConfiguration</code>中使用<code>@Import</code>进行统一引入。这样我们在增删组件的时候直接修改<code>@Import</code>就可以，无需每个组件修改一次。</p><p><img src="https://file.note.0moe.cn/img/image-20210222113005820.png" alt="image-20210222113005820"></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token class-name">SecurityConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@Enable0moeMultiDbRedis</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CoreAutoConfiguration</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConditionalOnMissingBean</span>    <span class="token keyword">public</span> <span class="token class-name">UserInfoService</span> <span class="token function">userInfoService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">UserInfoServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">TokenAuthenticationFilter</span> <span class="token function">tokenAuthenticationFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TokenAuthenticationFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>要记得在<code>spring.factories</code>引入自动配置类。</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"># spring.factoriesorg.springframework.boot.autoconfigure.EnableAutoConfiguration&#x3D;\cn.lm.core.CoreAutoConfiguration<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>####common工程</p><p>common工程会集成一些标准工具类jar（如<code>hutool</code>）和项目通用的utils，方便其他项目使用。<code>允许多工程重复引入</code></p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>cn.lm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>cn.lm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>common<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>common<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>common<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>cn.hutool<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hutool-all<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="system工程"><a href="#system工程" class="headerlink" title="system工程"></a>system工程</h4><p>system工程作为我们对外提供服务的工程，使用DDD模型驱动。</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>cn.lm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>cn.lm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>system<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>system<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>system<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>cn.lm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>工程结构如下：</p><p><img src="https://file.note.0moe.cn/img/image-20210222114540527.png" alt="image-20210222114540527"></p><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><h5 id="lombok"><a href="#lombok" class="headerlink" title="lombok"></a>lombok</h5><p>lombok是一把双刃剑，我们使用lombok来简化开发的同时应谨慎一些使用。值得注意的是，lombok应仅用在类pojo文件的编写简化上，可以使用Getter、Setter，log以及Builder等，<code>禁止使用@Data</code>。其他地方酌情按照项目需要，使用lombok一些特性，比如自动注入简化等。</p><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><p>前端没有后端那么复杂，但是仍需要区分各个模块，以及遵守原则：<code>core模块仅允许单次引入，shared模块允许多次引入</code>。</p><h3 id="工程创建"><a href="#工程创建" class="headerlink" title="工程创建"></a>工程创建</h3><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 创建admin-ui工程, 使用严格模式，css使用scss，使用路由ng new admin-ui --strict --style scss --routing# 引入material-ui, 主题选择custom，应用全局排版样式，应用浏览器动画ng add @angular&#x2F;material<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="模块划分"><a href="#模块划分" class="headerlink" title="模块划分"></a>模块划分</h3><h4 id="core"><a href="#core" class="headerlink" title="core"></a>core</h4><p>core模块负责工程所有犬儒引入的模块和全局配置，比如<code>BrowserModule</code>、<code>BrowserAnimationsModule</code>、<code>ServiceModule</code>等，这些都仅需要在整个工程中引入一次即可，不需要重复引用，都由core包管理起来，然后将core包放在appModule中引入。勇士appModule应只引入core包</p><div class="code-wrapper"><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">@NgModule(&#123;  declarations: [],  imports: [    SharedModule,    BrowserModule,    RoutesModule,    BrowserAnimationsModule,    ServiceModule,    LayoutModule,  ],  exports: [    SharedModule,    RoutesModule,  ]&#125;)export class CoreModule &#123;  constructor(@SkipSelf() @Optional() parentModule: CoreModule) &#123;    if (parentModule)&#123;      throw new Error(&#39;core只能在appModule引入&#39;);    &#125;  &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>appModule</p><div class="code-wrapper"><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">@NgModule(&#123;  declarations: [    AppComponent  ],  imports: [    CoreModule  ],  providers: [],  bootstrap: [AppComponent]&#125;)export class AppModule &#123;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="shared"><a href="#shared" class="headerlink" title="shared"></a>shared</h4><p>shared模块类似于后端的common工程，本质上属于组件包，可在各个模块中引入。他存在的意义是为了方便一方组件和三方组件的管理，在使用第三方组件时应直接引入shared包。</p><div class="code-wrapper"><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">@NgModule(&#123;  declarations: [],  imports: [    CommonModule,    RouterModule,    MatIconModule,  ],  exports: [    CommonModule,    RouterModule,    MatIconModule,  ]&#125;)export class SharedModule &#123; &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="service"><a href="#service" class="headerlink" title="service"></a>service</h4><p>service包用于资源管理。他的绝大部分作用时管理api，当然有些兄弟组件的联动也可以通过service（或ngrx）来驱动，他也是放在core包中一次性引入。</p><div class="code-wrapper"><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">@NgModule(&#123;  declarations: [],  imports: [  ]&#125;)export class ServiceModule &#123; &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="routes"><a href="#routes" class="headerlink" title="routes"></a>routes</h4><p>routes负责业务路由视图的管理。我们以后的业务代码都会放到routes包中。</p><p><img src="https://file.note.0moe.cn/img/image-20210222155959126.png" alt="image-20210222155959126"></p><div class="code-wrapper"><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">@NgModule(&#123;  declarations: [],  imports: [    RoutesRoutingModule,    SharedModule  ]&#125;)export class RoutesModule &#123; &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">const routes: Routes &#x3D; [  &#123;    path: &#39;passport&#39;,    component: PassportComponent,    loadChildren: () &#x3D;&gt; import(&#39;.&#x2F;passport&#x2F;passport.module&#39;).then(m &#x3D;&gt; m.PassportModule)  &#125;];@NgModule(&#123;  imports: [RouterModule.forRoot(routes)],  exports: [RouterModule]&#125;)export class RoutesRoutingModule &#123; &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="layout"><a href="#layout" class="headerlink" title="layout"></a>layout</h4><p>layout负责模块布局。比如在这个passport页面，外部的背景、copyright都属于layout的一部分，登录路由（routesModule）渲染的部分仅包括红框内<img src="https://file.note.0moe.cn/img/image-20210222160142778.png" alt="image-20210222160142778"></p><p>在比如这里，这个就进入了业务布局，外部包括菜单等都是layout的一步分，只有红框内才是业务视图（routesModule）真正渲染的地方。</p><p><img src="https://file.note.0moe.cn/img/image-20210222160516595.png" alt="image-20210222160516595"></p><h3 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h3><p>ng的组件生成需要改动一些全局配置。以下配置放在<code>projects.admin-ui.schematics</code>中</p><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"@schematics/angular:component"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"style"</span><span class="token operator">:</span> <span class="token string">"scss"</span><span class="token punctuation">,</span>    <span class="token property">"changeDetection"</span><span class="token operator">:</span> <span class="token string">"OnPush"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"@schematics/angular:module"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"commonModule"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    
    <tags>
      
      <tag>从绫开始</tag>
      
      <tag>后台管理系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从绫开始的后台管理系统（三）</title>
    <link href="/2021/02/18/%E4%BB%8E%E7%BB%AB%E5%BC%80%E5%A7%8B%E7%9A%84%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <url>/2021/02/18/%E4%BB%8E%E7%BB%AB%E5%BC%80%E5%A7%8B%E7%9A%84%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%89%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这一章我们开始对若依的前端工程进行分析。</p><p>ruoyi的前端主要包括登录验证，路由转发，dev模式这几个模块。</p><a id="more"></a><h2 id="工程结构"><a href="#工程结构" class="headerlink" title="工程结构"></a>工程结构</h2><p>ruoyi的前端主要包括api(service)、layout、router、store(vuex)、view几个部分。</p><p><img src="https://file.note.0moe.cn/img/image-20210218172418893.png" alt="image-20210218172418893"></p><h3 id="组件视图"><a href="#组件视图" class="headerlink" title="组件视图"></a>组件视图</h3><p>assets是存储一些静态图片资源的地方；</p><p>components内放了一些抽象的、可复用的组件，可以放在具体的视图中直接使用。</p><p>layout是存储布局文件。菜单、内容区域、导航栏、用户设置都是数据布局的一部分。</p><p>views中存储的是内容视图，内容视图会在那layout的内容区域进行渲染。</p><p>directive存放的是vue指令。ruoyi仅将指定用于角色验证和权限验证。</p><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><p>api负责http资源管理，其实这里叫做service更恰当，因为资源不仅仅有api。</p><h3 id="路由访问"><a href="#路由访问" class="headerlink" title="路由访问"></a>路由访问</h3><p>router中存的是组件的路由数据，页面内导航都依赖于vue-router进行跳转。</p><h3 id="工具集合"><a href="#工具集合" class="headerlink" title="工具集合"></a>工具集合</h3><p>utils中是一些工具类，静态变量。比如权限验证工具类，错误代码常量。</p><p>store中是用来放置vuex的配置文件。若依在一些组件联动中使用了vuex，比如左侧菜单栏的伸缩。</p><p><strong>注：vuex严格来说只是一个状态管理的工具，它不产生数据，只是做数据的搬运工</strong></p><h2 id="资源聚合"><a href="#资源聚合" class="headerlink" title="资源聚合"></a>资源聚合</h2><p>资源管理的主要对象是http服务。因为现在的前端都是基于webapp的概念开发，对于一个app来说，数据来源不止一种http，它可以到一个资源服务器去拿用户信息，去另一个资源服务器拿订单信息等等。</p><p>基于这个理念，http服务资源就必须要管理起来。并且每种资源客户端都要作为一个单例提供（比如单例化的axios）。</p><h2 id="组件管理"><a href="#组件管理" class="headerlink" title="组件管理"></a>组件管理</h2><p>组件部分分为视图组件和指令组件，他们会一起参与渲染流程，控制页面的表现。这里视图组件和指令组件不在赘述，使用方法等可以自行查询vue文档。</p><h3 id="指令设计"><a href="#指令设计" class="headerlink" title="指令设计"></a>指令设计</h3><p>ruoyi的指令主要用绝角色验证和权限验证，他们控制着某个组件是否显示，某个页面是否有权限访问。举例来说：<img src="https://file.note.0moe.cn/img/image-20210218174148507.png" alt="image-20210218174148507"></p><p><img src="https://file.note.0moe.cn/img/image-20210218174245413.png" alt="image-20210218174245413"></p><p>如果当前用户没有<code>monitor:job:edit</code>这项权限，则会移除修改按钮。若仅使用指令而未设置操作权限值，则会直接抛出异常。</p><h3 id="状态管理"><a href="#状态管理" class="headerlink" title="状态管理"></a>状态管理</h3><p>状态管理ruoyi使用了vuex。它被使用在一些组件菜单数据的路由维护，组件之间的状态联动，tabs上右键菜单的联动，还有用户信息的更新联动。这一块有兴趣的同学可以学习一下vuex的状态管理。</p><blockquote><p>这里我们会用ng的rxjs来做，相比于rxjs，vuex，rxjs的写法会简明一些。</p></blockquote><h3 id="渲染流程"><a href="#渲染流程" class="headerlink" title="渲染流程"></a>渲染流程</h3><p>程序从index.html进入，从layout/index.vue开始渲染布局，布局渲染完毕后会渲染views下的内容视图。布局渲染和内容视图渲染的过程中会使用到components中的组件，这就是layout、views、components三者的关系和渲染流程。</p><h2 id="接口验证"><a href="#接口验证" class="headerlink" title="接口验证"></a>接口验证</h2><p>接口验证这里ruoyi是使用axios的拦截器做的。</p><h3 id="请求拦截"><a href="#请求拦截" class="headerlink" title="请求拦截"></a>请求拦截</h3><p>在进行请求时，会检查接口是否需要token将token注入头文件。</p><p><img src="https://file.note.0moe.cn/img/image-20210218175821226.png" alt="image-20210218175821226"></p><h3 id="响应拦截"><a href="#响应拦截" class="headerlink" title="响应拦截"></a>响应拦截</h3><p>在得到响应后，如果有错误代码axios拦截器会抛出异常并选择是否进行重定向。</p><p><img src="https://file.note.0moe.cn/img/image-20210218175712183.png" alt="image-20210218175712183"></p><h2 id="路由转发"><a href="#路由转发" class="headerlink" title="路由转发"></a>路由转发</h2><p>路由转发这里分为两部分，路由配置和路由转发。路由配置又分为静态配置和动态配置。路由转发一般使用<code>router.push</code>或<code>&lt;router-link&gt;</code>这里不再进行赘述，可以去看一下官方文档。</p><h3 id="静态配置"><a href="#静态配置" class="headerlink" title="静态配置"></a>静态配置</h3><p>使用下图这样的配置方式，将一些公共路由提前配置好。</p><p><img src="https://file.note.0moe.cn/img/image-20210218180413648.png" alt="image-20210218180413648"></p><h3 id="动态配置"><a href="#动态配置" class="headerlink" title="动态配置"></a>动态配置</h3><p>根据一些条件向router对象中添加路由配置。在ruoyi中是结合vuex向router对象中添加动态路由</p><p><img src="https://file.note.0moe.cn/img/image-20210218180802820.png" alt="image-20210218180802820"></p><h3 id="路由模式"><a href="#路由模式" class="headerlink" title="路由模式"></a>路由模式</h3><p>路由模式这个并不是vue独有，这是目前实行的一种标准。目前我们默认使用history模式。</p><ul><li><code>hash</code>: 使用 URL hash 值来作路由。支持所有浏览器，同时也支持在不部署到前端服务器，直接访问文件来进行跳转。</li><li><code>history</code>: 依赖 HTML5 History API 和服务器配置。此模式依赖于浏览器实现，要求必须部署在服务器，如node，nginx等。</li><li><code>abstract</code>: 支持所有 JavaScript 运行环境，如 Node.js 服务器端。<strong>如果发现没有浏览器的 API，路由会自动强制进入这个模式</strong></li></ul><h2 id="dev模式"><a href="#dev模式" class="headerlink" title="dev模式"></a>dev模式</h2><p>dev模式是为了方便我们在开发时解决跨域问题而产生的，它会将我们访问的接口进行代理访问从而解决跨域问题。</p><p>核心配置在我们红框部分：</p><p><img src="https://file.note.0moe.cn/img/image-20210218181914328.png" alt="image-20210218181914328"></p><ol><li><p>被代理的接口范围。一般来说是使用前缀匹配要代理的api。</p><div class="code-wrapper"><pre class="line-numbers language-js" data-language="js"><code class="language-js"># 若依管理系统<span class="token operator">/</span>开发环境<span class="token constant">VUE_APP_BASE_API</span> <span class="token operator">=</span> <span class="token string">'/dev-api'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li><li><p>目标地址。api服务器的地址</p></li><li><p>是否重写api。由于1的原因，可能改写了部分api，这时要将api重写覆盖。</p></li></ol><h2 id="其他设计"><a href="#其他设计" class="headerlink" title="其他设计"></a>其他设计</h2><h3 id="代码检查"><a href="#代码检查" class="headerlink" title="代码检查"></a>代码检查</h3><p>因js的写法非常灵活，开发人员很容易写出bug，比如变量提升、内存泄漏等。这里采用eslint和husky进行代码检查。eslint在ide编辑时就会提是，husky则是做了一个git的钩子，在commit前会调用相应的方法进行代码检查。</p><h3 id="语法转译"><a href="#语法转译" class="headerlink" title="语法转译"></a>语法转译</h3><p>因为浏览器兼容性的问题，需要将一些es6语法转译为es5。ruoyi是使用babel进行转译。</p><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><p>在打包时会根据不同的配置注入不同的环境变量，这也是兼容多环境比较重要的一个点</p><p><img src="https://file.note.0moe.cn/img/image-20210218182451675.png" alt="image-20210218182451675"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>ruoyi的前端设计解析到此就结束了。</p><p>其实前端框架性的配置本身就比较少，加上我们要用ng来实现，我们可利用的部分就更少了，基本都要重写，所以分析一些库的使用方法也意义不大。</p><p>前端的重点难点在于视图渲染和兼容。比如说要flow布局的兼容性，css在不同浏览器的兼容等等。这些都是要在我们正式编码中要解决的，在这里更希望关注一些宏观上，设计上的思路，而非到具体的兼容性和实现。</p>]]></content>
    
    
    
    <tags>
      
      <tag>从绫开始</tag>
      
      <tag>后台管理系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从绫开始的后台管理系统（二）</title>
    <link href="/2021/02/14/%E4%BB%8E%E7%BB%AB%E5%BC%80%E5%A7%8B%E7%9A%84%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <url>/2021/02/14/%E4%BB%8E%E7%BB%AB%E5%BC%80%E5%A7%8B%E7%9A%84%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>那这一章就正式开始对ruoyi的后端配置进行分析。</p><p>ruoyi的后端模块主要包括权限系统，动态数据源、数据权限隔离、代码生成器、定时任务，common工具，还有后端接口，下面我们逐一进行分析。</p><p>我们也会讲一些关于工程结构，依赖管理配置方面的设计。</p><a id="more"></a><h2 id="工程结构"><a href="#工程结构" class="headerlink" title="工程结构"></a>工程结构</h2><p>工程结构主要分为两部分：pom结构和包结构。</p><h3 id="pom结构"><a href="#pom结构" class="headerlink" title="pom结构"></a>pom结构</h3><p>pom结构遵循oo（面向对象）原则，即配置尽量放在父工程中进行管理，同时子工程也要能够根据自己的需要进行调整（封装与继承），但注意在划分工程时不要成环，即子工程互相依赖。</p><p><img src="https://file.note.0moe.cn/img/image-20210217215151835.png" alt="image-20210217215151835"></p><p>我们可以看到，属性配置<code>properties</code>，和依赖管理<code>dependencyManagement</code>，都是放在父工程<code>ruoyi</code>中，子工程只需要继承父工程就可以使用父工程的配置和依赖。</p><p>注意：注意打包结构<code>packaging</code>，自己选择是要打成jar，war，还是pom包。一般来说父工程是pom包，子项目打包时现在一般时jar包（内置tomcat），如果使用外部tomcat则要打成war包。</p><p><img src="https://file.note.0moe.cn/img/image-20210217220344888.png" alt="image-20210217220344888"></p><h3 id="包结构"><a href="#包结构" class="headerlink" title="包结构"></a>包结构</h3><p>包结构目前由两种模型驱动：mvc模型和DDD模型。mvc模型是传统的驱动模型，讲究的是视图与数据分离，由controller负责管理；DDD模型（领域驱动模型）是近几年的一种驱动模型，他讲究的是根据业务领域划分功能边界。</p><ul><li><p>mvc模型</p><p>mvc模型在模板渲染时代（jsp和freemarker）比较流行，自从前后端分离流行起来后，渐渐的大家觉得味不太对，因为没有视图需要渲染了，controller的责任好像不像以前那么沉重了，但是又找不到新的，合适的称呼；而且因为ssm架构，导致配置xml和配置类越来越多，不是很好管理，因此mvc才渐渐没落下去。</p><p>mvc模型的基本结构为controller-dao-service，业务相关的类都依据这三者进行划分，有一些配置和工具类，则单独放在config和utils包中进行管理。</p></li><li><p>DDD模型</p><p>DDD模型（领域驱动模型）因上述的发展原因被挖了出来，实际上互联网各种理论很早就有人提出来了，只是顺应时代发展才出现这种风水轮流转的局面。mvc模型不足以描述复杂的结构，因此才掏出了DDD。</p><p>DDD模型讲究以业务边界划分领域，在业务边界有重合的地方，则单独补充一个业务融合领域。</p><p>由于DDD讲究一个理解（业务理解和架构理解），因此并没有mvc模型划分的那么清晰。每个人都有自己的一套理解和最佳实践。简单的说是分为api-app-domain-infra四层，具体可以去看我的这篇文章<a href="https://note.0moe.cn/2019/07/28/DDD%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%EF%BC%88%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%EF%BC%89/">DDD项目结构（领域驱动设计）</a>。</p></li></ul><p>这里我不讲的太深，具体理论有各路大神比我讲的更好。</p><p>ruoyi的包结构有一些地方让我有点难受，它把service放在了依赖<code>ruoyi-system</code>中，而controller放到了<code>ruoyi-admin</code>中这样就导致我要改动代码有时就要改两遍。</p><p>我理解作者的意图，他是想把字典，系统信息等等服务作为一个依赖提供，以供其他包调用，将controller和service解耦。但是我还是比较喜欢放在同一个包里，统一对外提供服务，这个就属于仁者见仁智者见智了。</p><p>在我看来，一个模块是一个整体，controller是面向http提供服务，service和mapper是面向class提供服务，所以他们这种提供服务的属性没必要拆开，应该由调用方面对不同的场景是，选择不同的服务方法。</p><blockquote><p>遇到这种情况我们会放在同一个包里。</p></blockquote><h2 id="权限系统"><a href="#权限系统" class="headerlink" title="权限系统"></a>权限系统</h2><h3 id="权限验证设计"><a href="#权限验证设计" class="headerlink" title="权限验证设计"></a>权限验证设计</h3><p>ruoyi的权限系统是使用spring security的方案，token颁发是使用jwt+redis。即将token下发给客户端，且在服务器也存储一份。鉴权时在接口调用处进行鉴权。</p><h4 id="token颁发"><a href="#token颁发" class="headerlink" title="token颁发"></a>token颁发</h4><p>这个设计在我来看着实是有些臃肿。如果需要用户信息只要单开一个请求用户信息的接口就好了，没必要每次都用jwt去请求，这样一来存了两次（客户端一次，服务端一次），真的有这个必要吗？</p><p>现在主流的方案有两种，<code>jwt</code>和<code>token+redis</code></p><ol><li>jwt是无状态分布式的设计，类似于证书签署下发。<ul><li>优点<ol><li>jwt可以减少服务器压力。因为是无状态的设计，所以用户信息都存储在本体中被下发到客户端，客户端携带jwt访问资源时，可以直接读取到用户信息。特别是在分布式环境下，各个服务不需要再根据token去获取用户信息，鉴权中心也不需要再去存储用户信息。</li></ol></li><li>缺点<ol><li>jwt无法主动过期。因为是无状态的设计，jwt自身会包含一个过期时间，但是服务端无法让它主动过期或续签。比如我们想要修改用户的数据（如时区，权限等）这样就要使原有的jwt失效，重新颁发。要想主动过期必须要维护一个集合，以此来验证jwt是否有效。实际上证书注销也是这么做的，在https请求时会验证证书是否有效。</li><li>jwt存储过多数据会造成http头负担过大。如果用户信息中有太多的属性，比如时区，登录地区，操作系统等，或者直接在里面维护一个权限list。这样会导致http头负担暴增，http开销变得极大。</li><li>jwt未加密。jwt是使用base64编码，因此等同于明文。且使用base64编码增大数据体积，使<code>2</code>的缺点进一步被放大。</li><li>接口防刷及多端验证。持有jwt的客户端可以无穷端登录或者无限刷你的接口，这个时候你就要去管理jwt以防止这种问题。</li></ol></li></ul></li><li>token+redis是类session中心化存储的设计。<ul><li>优点<ol><li>可进行会话管理。因为用户信息和登录状态都是存储在服务器的，因此服务器可以控制会话，动态修改用户信息。并且这也是类session设计的优势所在，现在不推荐使用session的原因是因为session的跨域问题，安全问题以及存储扩展问题。</li></ol></li><li>缺点<ol><li>信息存储会增加服务器负担，且需要选择合适的存储组件。因为是中心化管理，所以用户信息必须要放在服务器存储，且这类数据读写频率会非常高，不能用数据库进行管理，需要引入redis等其他高速读写组件。<code>这同时也是中心化管理所需要的资源，不然中心化管理没法做。</code></li></ol></li></ul></li></ol><p>ruoyi的权限系统设计相当于把这两个设计聚合到一起。它解决了jwt过期的缺点，但jwt的优点完全没有用到，且其他的缺点无法解决，反而事倍功半。</p><blockquote><p>我们的后台管理会采用token+redis这种方案。因为作为管理系统，我们必须要对会话进行管理。jwt这种方案更适合应用在其他的场景，比如邮件验证等。</p></blockquote><h4 id="接口鉴权"><a href="#接口鉴权" class="headerlink" title="接口鉴权"></a>接口鉴权</h4><p>接口鉴权是使用spring security的<code>@PreAuthorize</code>+权限编码进行鉴权。这样设计鉴权逻辑可以有很大的自由，且可以精细到对每个接口单独进行权限管理。</p><p><img src="https://file.note.0moe.cn/img/image-20210215103340240.png" alt="image-20210215103340240"></p><p><img src="https://file.note.0moe.cn/img/image-20210215103405036.png" alt="image-20210215103405036"></p><blockquote><p>这一块我们采用和ruoyi相同的方案。</p></blockquote><h3 id="RBAC角色权限设计"><a href="#RBAC角色权限设计" class="headerlink" title="RBAC角色权限设计"></a>RBAC角色权限设计</h3><p>关于RBAC的方面可以参考<a href="https://shuwoom.com/?p=3041">《RBAC权限系统分析、设计与实现》</a> 或自行百度，这里我们不再赘述。</p><p>ruoyi也是采用的RBAC的设计方案，做到<code>用户-角色-权限</code>三者的解耦。不过它实现的有一些小瑕疵，并未完全做到用户与权限的解耦。</p><p><img src="https://file.note.0moe.cn/img/image-20210215211158151.png" alt="image-20210215211158151"></p><p>在这里，它创建用户的时候，不是将角色放在用户里，而是直接将权限放在用户里。这样会导致角色权限更新的时候要去更新所有用户缓存的权限，或者让具有此角色的用户重新登录才能获取到最新的权限list。前者需要遍历所有用户，对缓存的压力极大，后者会使token集体失效，对登录接口的压力极大。</p><p><img src="https://file.note.0moe.cn/img/image-20210215212949736.png" alt="image-20210215212949736"></p><p>ruoyi为了解决它，只更新了当前用户的权限缓存。但随之而来的是：如果其他用户具有此角色，则这个用户必须要重新登陆才能使用最新添加的权限，否则他还是没有这个权限。这样就造成了数据不一致。</p><blockquote><p>这个问题有更好的解决办法。在我们的系统中，用户信息存储的是角色信息，而非具体的权限信息。我们在访问接口时，会拿着用户的当前角色去缓存中查询角色对应的权限集合进行鉴权；当角色权限更新时，只要更新角色对应的权限集合及缓存。不需要进行用户遍历，也不会有数据一致性的问题。我们只要付出一次redis查询的代价就可以解决。</p></blockquote><h2 id="动态数据源"><a href="#动态数据源" class="headerlink" title="动态数据源"></a>动态数据源</h2><p>动态数据源这里要思考两处：一是怎么创建多个DataSource，多个DataSource的配置如何维护；二是在使用时如何选择自己想要的数据源，即数据源选择。</p><h3 id="数据源创建"><a href="#数据源创建" class="headerlink" title="数据源创建"></a>数据源创建</h3><p>在数据源创建时，创建主从数据源（实际上主从只是个代号，你也可以叫一号数据源二号数据源等等）。<code>@ConfigurationProperties</code>这个注解可以将对应配置下的属性自动填充到bean中；<code>DruidProperties</code>是统一进行druid连接池的配置。这样会创建两个数据源。</p><p><img src="https://file.note.0moe.cn/img/image-20210215223545825.png" alt="image-20210215223545825"></p><p><img src="https://file.note.0moe.cn/img/image-20210215223757427.png" alt="image-20210215223757427"></p><p><img src="https://file.note.0moe.cn/img/image-20210215224336965.png" alt="image-20210215224336965"></p><p>在创建完主从数据源后，会将两个数据源bean都加入到<code>dynamicDataSource</code>bean中，这个bean需要继承<code>org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource</code>，她内部会维护一个map，在数据源切换时会根据标记从map取出数据源使用。</p><p><img src="https://file.note.0moe.cn/img/image-20210215223810748.png" alt="image-20210215223810748"></p><p><img src="https://file.note.0moe.cn/img/image-20210215225013355.png" alt="image-20210215225013355"></p><p>注意上图的这个方法，这里是选择最终调用的数据源，ruoyi是使用ThreadLocal（线程变量）的方式进行选择。<img src="https://file.note.0moe.cn/img/image-20210215225426832.png" alt="image-20210215225426832"></p><p>还有一点要说明。如果你使用这种客制化数据源，一定要将spring boot数据源的自动配置类排除。不然会因无法找到数据源配置而启动失败。</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token punctuation">(</span>exclude <span class="token operator">=</span> <span class="token class-name">DataSourceAutoConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="数据源选择"><a href="#数据源选择" class="headerlink" title="数据源选择"></a>数据源选择</h3><p>在选择数据源时，ruoyi是用AOP+ThreadLocal做的数据源选择。</p><p>整体思路：</p><p><img src="https://file.note.0moe.cn/img/image-20210218000912204.png" alt="image-20210218000912204"></p><p>使用示例：</p><p><img src="https://file.note.0moe.cn/img/image-20210215231153555.png" alt="image-20210215231153555"></p><p>需要注意，因为数据源切换时基于aop的，所以同类调用方法不能使用this调用，需要使用代理对象调用，即<code>AopContext.currentProxy()</code>。</p><h2 id="数据权限隔离"><a href="#数据权限隔离" class="headerlink" title="数据权限隔离"></a>数据权限隔离</h2><p>数据权限隔离，或者说叫数据权限分配，他的业务目的是让每个人只能看自己全权限的数据，不能越权去看别人的数据。比如每个销售员自己的单子都不想给别人看，但是销售经理应该可以看到所有销售员的单子，这时候就有了它的用武之地。</p><h3 id="主流做法"><a href="#主流做法" class="headerlink" title="主流做法"></a>主流做法</h3><p>目前这块主流的解决方案都是拼sql，将权限配置保存在数据库中，只不过是最后拼在哪：有些设计选择拼在sql最后，由开发人员显示的调用；也有些设计是在表名处做文章，根据权限条件限制生成临时表。</p><p>ruoyi的数据权限隔离的做法便是前者，且是基于aop做的。根据方法上标记<code>@DataScope</code>注解，在当前方法拦截并生成权限sql片段，最后由开发人员显式的插入。具体片段生成方法见<code>com.ruoyi.framework.aspectj.DataScopeAspect#dataScopeFilter</code>。</p><p><img src="https://file.note.0moe.cn/img/image-20210217231043061.png" alt="image-20210217231043061"></p><blockquote><p>因数据权限这里每种业务要求都不相同，这个没法做一个非常通用的方案，我们这里也是会维持相同的设计。</p></blockquote><h2 id="代码生成器"><a href="#代码生成器" class="headerlink" title="代码生成器"></a>代码生成器</h2><p>代码生成器这里算是比较重要的一块，一个好用的生成器可以极大的减少工作量。</p><p>这里技术不是难点，会用模板引擎就ok，比如freemarker，velocity等。ruoyi使用的是velocity，它性能要比freemarker好一些，语法友好度也好一些。具体语法可以参考文档<a href="https://wizardforcel.gitbooks.io/velocity-doc/content/">介紹| Velocity 中文文档 - wizardforcel</a>，这里不做赘述</p><p>代码结构和预留结构是重点。直接影响你是否需要加班，像ruoyi自带的就有增删查改，导出，权限，这一块就做的很好，极大的减轻了工作量。</p><p>在这里提一下数据库乐观锁的问题，因为是管理系统，一条数据可能被很多人同时修改，所以需要加入乐观锁控制数据版本，保证所见即所得。</p><blockquote><p>我们这里因为使用框架的原因，需要对生成器模板做一些魔改。还有权限方面，我们希望做成自动放入数据库的模式，不要手动插入；还会在表设计中加入乐观锁。</p></blockquote><h2 id="common工具"><a href="#common工具" class="headerlink" title="common工具"></a>common工具</h2><p>工具包这里就比较自由了，常见的包有apache-common，guava，hutool，objectMapper等。这里我们主要分析工具类的设计原则。</p><h3 id="设计原则"><a href="#设计原则" class="headerlink" title="设计原则"></a>设计原则</h3><ol><li><p>尽量静态</p><p>工具类的方法应尽可能做成静态方法和静态字段，如果无法做成静态方法，则要考虑将这个类做成单例模式，不要多次实例化。因为静态方法会直接放在jvm栈中，效率要比非静态的高，而且对于开发人员来说也用着舒服。</p></li><li><p>命名规范</p><p>一般情况下，可以叫做xxxUtil或xxxUtils，如果有一些业务领域特定的工具类，则应该叫做xxxHelper,比如redisHelper，exportHelper等。且这些helper因为都要基于某一个组件的原因，必须要实例化。所以需要做单例设计。</p></li><li><p>性能要求</p><p>工具类方法作为基础架构的一种，调用的频率非常之高，所以内部实现在设计时就要考虑时间复杂度和空间复杂度，一点点性能问题就会被十倍百倍的放大，这也是一些公司要求工具类必须要技术经理编写的原因。</p></li><li><p>接口规范</p><p>一是方法命名要通俗易懂，且参数数量尽量控制不要超过5个。不然参数太多，命名只有自己看得懂，太麻烦了没人愿意用的。</p><p>二是是弃用原则。弃用时如果项目已经发布，要将原有方法打上<code>@Deprecated</code>标记，并记录推荐使用的新方法。原有方法千万不要立刻删除，要在写一个新接口。因为老方法不知道有多少个人用，一旦删除别人的系统可能立刻崩溃。在打上标记后再经历几个版本迭代，发个删除通告，再删就可以了。</p></li></ol><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p><del>其实ruoyi的common包我看着很难受</del>，他把core包的内容也放到了common包中，实际上core包和common包应该是独立的两个包。common负责工具，core负责核心配置。像<code>RuoYiConfig</code>，<code>BaseController</code>，<code>BaseException</code>这些应该集成在core包中单独发布。而像常量类、utils应放在common中。没必要混合在一起。这里感觉ruoyi比较混乱。</p><blockquote><p>关于这部分我会拆成两个包：core和common包，让职责划分更加清晰一点。</p></blockquote><h2 id="其他设计"><a href="#其他设计" class="headerlink" title="其他设计"></a>其他设计</h2><h3 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h3><p>定时任务这里ruoyi是对quartz做了一个包装，封装了一些查询任务信息的方法和执行任务，具体可以参考quartz的方法。</p><p>如果对job的需求比较轻量可以试一下这个工具<a href="https://www.hutool.cn/docs/#/cron/%E5%85%A8%E5%B1%80%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-CronUtil">全局定时任务-CronUtil</a>，非常轻量</p><h3 id="异步日志"><a href="#异步日志" class="headerlink" title="异步日志"></a>异步日志</h3><p>这里也是用aop做了一个异步日志的拦截，核心就收集入参、出参、用户信息等信息调用异步线程插入数据库，比较简单。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>其实后端设计主要就是几块：数据库设计，配置设计，工程结构设计。剩下的基本都是经验积累：比如怎么去设计代码生成器，工具类应该怎么设计，这里只能讲一些原则性的思路（劝告？）,还是要多听多写多看多读源码。</p><p>关于ruoyi的后端部分分析就到此结束了，有一些设计原则和优化的点我都在相应章节记录下来。等我们正式开始编码的时候会一起应用。</p>]]></content>
    
    
    
    <tags>
      
      <tag>从绫开始</tag>
      
      <tag>后台管理系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从绫开始的后台管理系统（一）</title>
    <link href="/2021/02/08/%E4%BB%8E%E7%BB%AB%E5%BC%80%E5%A7%8B%E7%9A%84%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2021/02/08/%E4%BB%8E%E7%BB%AB%E5%BC%80%E5%A7%8B%E7%9A%84%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>这是从绫开始系列的新坑，适合有一些基础的朋友，<del>比如会写hello world的朋友</del>。</p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>将会使用angular+spring boot搭建一个后台管理系统。我们尽量不重新造轮子，所以会先分析当前市面上成熟的管理系统（<a href="https://gitee.com/y_project/RuoYi-Vue">RuoYi-Vue</a>），再去开始搭建我们自己的后台管理系统，能重用ruoy的部分我们尽量不手写，<del>所以本系统是一个基于ruoyi的后台管理系统</del>。</p><p>有人可能会问，既然有现成的为什么还要自己做？这个我给出的回答有两个方面：</p><p>一方面是验证所学。朋友们可以看看我其他的文章：如<a href="https://note.0moe.cn/2019/08/15/%E9%92%88%E5%AF%B9%E4%B8%9A%E5%8A%A1%E5%9C%BA%E6%99%AF%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/">针对业务场景的解决方案</a>，<a href="https://note.0moe.cn/2020/05/27/java%E7%BA%BF%E7%A8%8B%E6%B1%A0%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/">java线程池配置详解</a>等。都是一些零零散散的新得，没有统一的整合到一起。<del>还有就是<a href="https://note.0moe.cn/2020/06/19/%E4%BB%8E%E7%BB%AB%E5%BC%80%E5%A7%8B%E7%9A%84k3s%E5%88%B0istio%EF%BC%88%E4%B8%80%EF%BC%89/">从绫开始的k3s到istio（一）：安装K3S</a>一直没有等来二</del>。</p><p>另一方面是推广ng（angular）+spring boot的开发模式。其实ng的模块化设计非常的便捷，现今前端局面还是以小厂vue，大厂react为主，ng其实只要付出亿点点学习成本（这个成本肯定要比vue和react要高的），小项目和大项目都能hold住。</p><p>这个系列其实重要的不是编码，而是一些主流的设计思路和开发模式，我会录制视频并加上解说，代码也会开源放到github上。</p><p>同样，这个从绫开始也是个很长的系列，耐心追更，你会有更多收获。</p><h2 id="开发计划"><a href="#开发计划" class="headerlink" title="开发计划"></a>开发计划</h2><ol><li>对<a href="https://gitee.com/y_project/RuoYi-Vue">RuoYi-Vue</a>进行结构分析。前端主要包括登录验证，路由转发，dev模式使用，组件设计要求；后端主要包括权限验证系统，日志系统，工程结构设计，多数据源，表设计，代码生成器等。</li><li>搭建权限系统。前后端的权限拦截，全局用户信息等。</li><li>字典模块设计。字典模块的后台存储，高速读取，前后端解耦。</li><li>构建代码生成器。这一步基本就是业务部分了，可以根据需要定制化一些代码模板。</li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>基本就这些。这里是大纲，也不是最后的版本，后续如有什么步骤或修正我也会在这里补上。</p>]]></content>
    
    
    
    <tags>
      
      <tag>从绫开始</tag>
      
      <tag>后台管理系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>分布式事务选型对比</title>
    <link href="/2021/01/13/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E9%80%89%E5%9E%8B%E5%AF%B9%E6%AF%94/"/>
    <url>/2021/01/13/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E9%80%89%E5%9E%8B%E5%AF%B9%E6%AF%94/</url>
    
    <content type="html"><![CDATA[<h1 id="分布式事务选型对比"><a href="#分布式事务选型对比" class="headerlink" title="分布式事务选型对比"></a>分布式事务选型对比</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>随着互联网架构的不断扩展，传统的ACID事务已经无法满足要求。为了解决这个问题，BASE理论被提出来取代ACID，基于BASE理论和CAP理论的分布式事务也有各种事务策略。如何保证整个事务整体的原子性与一致性问题？分布式事务如何选项才能更加适合当下的业务场景？已经成为了当下事务的痛点。</p><a id="more"></a><h2 id="解决方案对比"><a href="#解决方案对比" class="headerlink" title="解决方案对比"></a>解决方案对比</h2><h3 id="2PC两阶段提交"><a href="#2PC两阶段提交" class="headerlink" title="2PC两阶段提交"></a>2PC两阶段提交</h3><h4 id="XA方案"><a href="#XA方案" class="headerlink" title="XA方案"></a>XA方案</h4><p>为了提供统一的对接模型和标准，X/OPEN组织提出了一个DTP（Distributed Transaction Processing Reference Model）模型，其中规定了分布式事务中的三个角色：</p><ul><li>AP：应用程序</li><li>TM：事务管理器，负责协调管理整个分布式事务</li><li>RM：资源管理器也就是事务参与者，负责控制分支事务</li></ul><p>DTP模型还定义了TM和RM之间通信的接口规范，这个规范就是XA，本职上也是数据库提供的2PC接口协议。基于XA方案的事务流程如下：</p><ul><li>AP 持有 D1 和 D2 两个数据源；</li><li>AP 通过 TM 通知 D1 的 RM 操作数据，同时通知 D2 的 TM 操作数据，此时 D1 和 D2 操作的数据锁定，RM 不提交事务；</li><li>TM 收到 两个数据源的 RM 执行恢复，只要有一方失败，则向另外的 RM 发起回滚指令，对应 RM 回滚分支事务释放资源锁；</li><li>若均为成功，TM 向所有 RM 发起提交指令，所有 RM 接到指令提交事务，释放资源锁。</li></ul><p>XA方案本质上是数据库层面的分布式事务，要求数据库支持事务，实现强一致性。在整个事务流程中，从准备阶段到第二阶段的commit或rollback的整个过程中，TM一直持有对应相关数据资源的锁，如果有其他事务要修改数据库的该条数据，就必须等待锁的释放，存在长事务风险。</p><h4 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h4><p>适合于本地的多事务组合，对于基于网络io的分布式事务，由于无法解决io丢失问题，因此并不可靠</p><h3 id="TCC"><a href="#TCC" class="headerlink" title="TCC"></a>TCC</h3><p>关于TCC（Try-Confirm-Cancel）的概念，最早是由Pat Helland于2007年发表的一篇名为《Life beyond Distributed Transactions:an Apostate’s Opinion》的论文提出。 TCC事务机制相比于上面介绍的XA，解决了其几个缺点: 1.解决了协调者单点，由主业务方发起并完成这个业务活动。业务活动管理器也变成多点，引入集群。 2.同步阻塞:引入超时，超时后进行补偿，并且不会锁定整个资源，将资源转换为业务逻辑形式，粒度变小。 3.数据一致性，有了补偿机制之后，由业务活动管理器控制一致性</p><p>对于TCC的解释:</p><ul><li>Try阶段：尝试执行,完成所有业务检查（一致性）,预留必须业务资源（准隔离性）</li><li>Confirm阶段：确认执行真正执行业务，不作任何业务检查，只使用Try阶段预留的业务资源，Confirm操作满足幂等性。要求具备幂等设计，Confirm失败后需要进行重试。</li><li>Cancel阶段：取消执行，释放Try阶段预留的业务资源 Cancel操作满足幂等性Cancel阶段的异常和Confirm阶段异常处理方案基本上一致。</li></ul><p>举个简单的例子如果你用100元买了一瓶水， Try阶段:你需要向你的钱包检查是否够100元并锁住这100元，水也是一样的。</p><p>如果有一个失败，则进行cancel(释放这100元和这一瓶水)，如果cancel失败不论什么失败都进行重试cancel，所以需要保持幂等。</p><p>如果都成功，则进行confirm,确认这100元扣，和这一瓶水被卖，如果confirm失败无论什么失败则重试(会依靠活动日志进行重试)</p><p>对于TCC来说适合一些:</p><ul><li>强隔离性，严格一致性要求的活动业务。</li><li>执行时间较短的业务</li></ul><h4 id="结论-1"><a href="#结论-1" class="headerlink" title="结论"></a>结论</h4><p>TCC的特点在于业务资源检查与加锁，一阶段进行校验，资源锁定，如果第一阶段都成功，二阶段对锁定资源进行交易逻辑，否则，对锁定资源进行释放。应用实施成本较高。</p><h3 id="MQ事务"><a href="#MQ事务" class="headerlink" title="MQ事务"></a>MQ事务</h3><p>RocketMQ在4.3版本开始支持事务消息，即prepare消息。这种消息在发送到MQ之后不会立即投递到消费者，会由发送者二次确认后，由RocketMQ根据确认指令决定投递还是丢弃。基于该方案的整个事务流程如下：</p><ul><li>事务发起方发送prepare消息到RocketMQ，RocketMQ存储该消息并反馈发起方消息接收成功，prepare消息不允许被消费者消费。</li><li>发起方接收到RocketMQ的反馈后，执行本地事务，若本地事务执行成功，发起方向RocketMQ发送prepare消息的commit指令，否则发送rolback。</li><li>RocketMQ接收到发起方二次对prepare消息的确认指令后，执行消息的对应操作，commit控制消息进入实际的消费队列，rollback会删除对应消息，至此，保证了本地事务与消息发送的原子性问题。</li><li>对于事务发起方二次确认的可靠性问题，RocketMQ提供反向的定时任务汇差事务状态机制，最多重试15次，超过则丢弃消息。</li><li>事务参与者监听RocketMQ，基于消息确认（ACK）机制，参与者接收到消息并业务处理完成后向RocketMQ发送ack，保证参与者接收消息的可靠性问题。</li><li>事务参与者对事务消息的消费方法实现幂等性，解决可能存在的消息重复消费问题。</li></ul><h4 id="结论-2"><a href="#结论-2" class="headerlink" title="结论"></a>结论</h4><p>适合非主要流程的事务处理，如电商中的评论，物流信息等。允许丢失部分信息，必要时可人工干预。</p><h3 id="saga事务"><a href="#saga事务" class="headerlink" title="saga事务"></a>saga事务</h3><p>Saga是30年前一篇数据库伦理提到的一个概念。其核心思想是将长事务拆分为多个本地短事务，由Saga事务协调器协调，如果正常结束那就正常完成，如果某个步骤失败，则根据相反顺序一次调用补偿操作。 Saga的组成：</p><p>每个Saga由一系列sub-transaction Ti 组成 每个Ti 都有对应的补偿动作Ci，补偿动作用于撤销Ti造成的结果,这里的每个T，都是一个本地事务。 可以看到，和TCC相比，Saga没有“预留 try”动作，它的Ti就是直接提交到库。</p><p>Saga的执行顺序有两种：</p><p>T1, T2, T3, …, Tn</p><p>T1, T2, …, Tj, Cj,…, C2, C1，其中0 &lt; j &lt; n Saga定义了两种恢复策略：</p><p>向后恢复，即上面提到的第二种执行顺序，其中j是发生错误的sub-transaction，这种做法的效果是撤销掉之前所有成功的sub-transation，使得整个Saga的执行结果撤销。 向前恢复，适用于必须要成功的场景，执行顺序是类似于这样的：T1, T2, …, Tj(失败), Tj(重试),…, Tn，其中j是发生错误的sub-transaction。该情况下不需要Ci。</p><p>这里要注意的是，在saga模式中不能保证隔离性，因为没有锁住资源，其他事务依然可以覆盖或者影响当前事务。</p><p>还是拿100元买一瓶水的例子来说，这里定义</p><p>T1=扣100元 T2=给用户加一瓶水 T3=减库存一瓶水</p><p>C1=加100元 C2=给用户减一瓶水 C3=给库存加一瓶水</p><p>我们一次进行T1,T2，T3如果发生问题，就执行发生问题的C操作的反向。 上面说到的隔离性的问题会出现在，如果执行到T3这个时候需要执行回滚，但是这个用户已经把水喝了(另外一个事务)，回滚的时候就会发现，无法给用户减一瓶水了。这就是事务之间没有隔离性的问题</p><p>可以看见saga模式没有隔离性的影响还是较大，可以参照华为的解决方案:从业务层面入手加入一 Session 以及锁的机制来保证能够串行化操作资源。也可以在业务层面通过预先冻结资金的方式隔离这部分资源， 最后在业务操作的过程中可以通过及时读取当前状态的方式获取到最新的更新。</p><h4 id="结论-3"><a href="#结论-3" class="headerlink" title="结论"></a>结论</h4><p>Saga的核心就是补偿，一阶段就是服务的正常顺序调用（数据库事务正常提交），如果都执行成功，则第二阶段则什么都不做；但如果其中有执行发生异常，则依次调用其补偿服务（一般多逆序调用未已执行服务的反交易）来保证整个交易的一致性。应用实施成本一般。</p>]]></content>
    
    
    
    <tags>
      
      <tag>事务</tag>
      
      <tag>分布式</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从绫开始的k3s到istio（一）：安装K3S</title>
    <link href="/2020/06/19/%E4%BB%8E%E7%BB%AB%E5%BC%80%E5%A7%8B%E7%9A%84k3s%E5%88%B0istio%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2020/06/19/%E4%BB%8E%E7%BB%AB%E5%BC%80%E5%A7%8B%E7%9A%84k3s%E5%88%B0istio%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="从绫开始的k3s到istio（一）：安装K3S"><a href="#从绫开始的k3s到istio（一）：安装K3S" class="headerlink" title="从绫开始的k3s到istio（一）：安装K3S"></a>从绫开始的k3s到istio（一）：安装K3S</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为k8s太大了嘛，就一直想搞也莫得银子。正巧从逼乎上看到了k3s，也是挺有意思，正好我服务器也能勉强带的动（2C4G）就搞了一个。这个系列主要使用k3s+istio。从k3s安装，配置资源服务，部署代码，自动化构建到状态监控等，会一直更新下去。</p><a id="more"></a><h2 id="K3S安装"><a href="#K3S安装" class="headerlink" title="K3S安装"></a>K3S安装</h2><p>安装前有几点注意：</p><ul><li><p>hostname。</p><p>因为k3s的node节点有命名规则，只允许字母、数字和中划线(<code>-</code>)。并且节点名称默认名称使用hostname，因此某些云服务商的默认命名可能有问题，比如VM_6。这种节点是无法创建成功的，因此我们首先要重命名hostname。</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo hostnamectl set-hostname &lt;newhostname&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>用istio代替traefik做反向代理</p><p>因为traefik不支持mysql、redis等协议代理，因此我们用istio做反代</p></li></ul><h3 id="国内源安装k3s"><a href="#国内源安装k3s" class="headerlink" title="国内源安装k3s"></a>国内源安装k3s</h3>  <div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">curl -sfL https:&#x2F;&#x2F;docs.rancher.cn&#x2F;k3s&#x2F;k3s-install.sh | INSTALL_K3S_MIRROR&#x3D;cn INSTALL_K3S_EXEC&#x3D;&quot;server --no-deploy&#x3D;traefik --kube-apiserver-arg service-node-port-range&#x3D;1-65535&quot; sh -<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>  关于安装参数，我们一条一条来解释：</p><blockquote><p>INSTALL_K3S_MIRROR：使用国内源安装</p><p>INSTALL_K3S_EXEC：安装参数</p><ul><li>–no-deploy=traefik：禁用traefik代理。traefik是k3s自带的反向代理，因为我们这里要使用istio做反代，所以把默认的traefik禁用。</li><li>–kube-apiserver-arg service-node-port-range=1-65535：端口映射范围，api-server默认可映射到宿主的端口范围是30000+，但是我们有些资源或者服务要映射到外部供外部调用，比如80、443、3306等……因此要更改默认范围。前面的–kube-apiserver-arg表示这是一个k8s服务的配置参数。具体可参考文档<a href="https://docs.rancher.cn/k3s/installation/install-options.html#_3-%E9%A2%9D%E5%A4%96%E7%9A%84%E9%85%8D%E7%BD%AE%E9%80%89%E9%A1%B9">额外的配置选项</a>。</li></ul></blockquote><h3 id="安装kubectl"><a href="#安装kubectl" class="headerlink" title="安装kubectl"></a>安装kubectl</h3><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 用阿里源安装cat &lt;&lt;EOF &gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;kubernetes.repo[kubernetes]name&#x3D;Kubernetesbaseurl&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;repos&#x2F;kubernetes-el7-x86_64&#x2F;enabled&#x3D;1gpgcheck&#x3D;1repo_gpgcheck&#x3D;1gpgkey&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;yum-key.gpg https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;rpm-package-key.gpgEOFsetenforce 0yum install -y kubelet kubeadm kubectl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="安装验证"><a href="#安装验证" class="headerlink" title="安装验证"></a>安装验证</h3><ul><li><p>检查节点状态</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ kubectl get node NAME   STATUS   ROLES    AGE     VERSIONvm6   Ready    master   5d23h   v1.18.3+k3s1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></li><li><p>检查节点的污点情况</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 请检查节点的污点情况，如果是false，则下面可以略过$ kubectl describe node vm6 | grep UnschedulableUnschedulable:      false# 因为我只有一台服务器，所以仅部署了master节点，正常master节点是不允许运行pod的，这里是对master做了污化# 移除node.kubernetes.io&#x2F;unschedulable，或执行以下命令$ kubectl taint nodes --all node-role.kubernetes.io&#x2F;master-$ kubectl taint nodes --all node-role.kubernetes.io&#x2F;master:PreferNoSchedule-# 这一步不确定性较大，如果都不可用，请自行根据文档解决，文档地址# https:&#x2F;&#x2F;kubernetes.io&#x2F;zh&#x2F;docs&#x2F;concepts&#x2F;configuration&#x2F;taint-and-toleration&#x2F;#%E6%A6%82%E5%BF%B5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>检查dns解析情况</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ nslookup kubernetes.defaultServer:    10.0.0.10Address 1: 10.0.0.10 kube-dns.kube-system.svc.cluster.localName:      kubernetes.defaultAddress 1: 10.0.0.1 kubernetes.default.svc.cluster.local# 如果显示NODOMAIN等，请修改&#x2F;etc&#x2F;resolv.conf,添加dnsip和search# 获取kube-dns的endpoint ip$ kubectl get endpoints -n kube-system | grep kube-dnskube-dns                10.42.0.54:53,10.42.0.54:9153,10.42.0.54:53   6d$ vim &#x2F;etc&#x2F;resolv.conf# nameserver放在第一行nameserver 10.42.0.54search default.svc.cluster.local svc.cluster.local svc.cluster.local cluster.localoptions ndots:5# 若产生其他问题请根据文档解决# https:&#x2F;&#x2F;kubernetes.io&#x2F;zh&#x2F;docs&#x2F;tasks&#x2F;debug-application-cluster&#x2F;debug-service&#x2F;#service-%E6%98%AF%E5%90%A6%E9%80%9A%E8%BF%87-dns-%E5%B7%A5%E4%BD%9C<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ul><h2 id="文档地址"><a href="#文档地址" class="headerlink" title="文档地址"></a>文档地址</h2><p><a href="https://docs.rancher.cn/k3s/">K3S中文文档</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>k3s</tag>
      
      <tag>k8s</tag>
      
      <tag>istio</tag>
      
      <tag>mysql</tag>
      
      <tag>redis</tag>
      
      <tag>gateway</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>java线程池配置详解</title>
    <link href="/2020/05/27/java%E7%BA%BF%E7%A8%8B%E6%B1%A0%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/"/>
    <url>/2020/05/27/java%E7%BA%BF%E7%A8%8B%E6%B1%A0%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="java线程池配置详解"><a href="#java线程池配置详解" class="headerlink" title="java线程池配置详解"></a>java线程池配置详解</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>网络资料多是复制粘贴，在此重写，以我为准。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><ul><li><p>4核</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 核心线程池大小</span><span class="token keyword">private</span> <span class="token keyword">int</span> corePoolSize <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span><span class="token comment">// 最大可创建的线程数</span><span class="token keyword">private</span> <span class="token keyword">int</span> maxPoolSize <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">;</span><span class="token comment">// 队列最大长度</span><span class="token keyword">private</span> <span class="token keyword">int</span> queueCapacity <span class="token operator">=</span> <span class="token number">400</span><span class="token punctuation">;</span><span class="token comment">// 线程池维护线程所允许的空闲时间</span><span class="token keyword">private</span> <span class="token keyword">int</span> keepAliveSeconds <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><a id="more"></a></li><li><p>2核</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 核心线程池大小</span><span class="token keyword">private</span> <span class="token keyword">int</span> corePoolSize <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token comment">// 最大可创建的线程数</span><span class="token keyword">private</span> <span class="token keyword">int</span> maxPoolSize <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">;</span><span class="token comment">// 队列最大长度</span><span class="token keyword">private</span> <span class="token keyword">int</span> queueCapacity <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span><span class="token comment">// 线程池维护线程所允许的空闲时间</span><span class="token keyword">private</span> <span class="token keyword">int</span> keepAliveSeconds <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>1核</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 核心线程池大小</span><span class="token keyword">private</span> <span class="token keyword">int</span> corePoolSize <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span><span class="token comment">// 最大可创建的线程数</span><span class="token keyword">private</span> <span class="token keyword">int</span> maxPoolSize <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span><span class="token comment">// 队列最大长度</span><span class="token keyword">private</span> <span class="token keyword">int</span> queueCapacity <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span><span class="token comment">// 线程池维护线程所允许的空闲时间</span><span class="token keyword">private</span> <span class="token keyword">int</span> keepAliveSeconds <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ul><h2 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h2><p>ThreadPoolExecutor类可设置的参数主要有：</p><ul><li><p><code>corePoolSize</code></p><blockquote><p>核心线程数，核心线程会一直存活，即使没有任务需要处理。当线程数小于核心线程数时，即使现有的线程空闲，线程池也会优先创建新线程来处理任务，而不是直接交给现有的线程处理。</p><p>核心线程在allowCoreThreadTimeout被设置为true时会超时退出，默认情况下不会退出。</p></blockquote></li><li><p><code>maxPoolSize</code></p><blockquote><p>当线程数大于或等于核心线程，且任务队列已满时，线程池会创建新的线程，直到线程数量达到maxPoolSize。如果线程数已等于maxPoolSize，且任务队列已满，则已超出线程池的处理能力，线程池会拒绝处理任务而抛出异常。</p></blockquote></li><li><p><code>keepAliveSeconds</code></p><blockquote><p>当线程空闲时间达到keepAliveSeconds，该线程会退出，直到线程数量等于corePoolSize。如果allowCoreThreadTimeout设置为true，则所有线程均会退出直到线程数量为0。</p></blockquote></li><li><p><code>allowCoreThreadTimeout</code></p><blockquote><p>是否允许核心线程空闲退出，默认值为false。</p></blockquote></li><li><p><code>queueCapacity</code></p><blockquote><p>任务队列容量。从maxPoolSize的描述上可以看出，任务队列的容量会影响到线程的变化，因此任务队列的长度也需要恰当的设置。</p></blockquote></li></ul><h2 id="扩容流程："><a href="#扩容流程：" class="headerlink" title="扩容流程："></a>扩容流程：</h2><p><img src="1590563487338.png" alt="线程池"></p><h2 id="参数配置"><a href="#参数配置" class="headerlink" title="参数配置"></a>参数配置</h2><h3 id="corePoolSize"><a href="#corePoolSize" class="headerlink" title="corePoolSize"></a>corePoolSize</h3><p>任务主要分为两类<strong>计算密集型</strong>和<strong>IO密集型</strong></p><p>目前大多数cpu都是多核多线程，像我是6核12线程，因此以往的用cpu核数计算并不恰当，应以实际线程数为主。</p><p>注意：有些cpu说是4核8线程，但实际上是6线程+2虚拟线程，此时要用6来计算。</p><p>或者直接一把梭：Runtime.getRuntime().availableProcessors()</p><p>在计算<code>corePoolSize</code>时涉及到一个阻塞系数的概念。</p><blockquote><p>如果任务有50%的时间处于阻塞状态，则阻塞系数为0.5。则程序所需的线程数为处理器可用核心数的两倍。如果任务被阻塞的时间少于50%，即这些任务是计算密集型的，则程序所需线程数将随之减少，但最少也不应该低于处理器的核心数。如果任务被阻塞的时间大于执行时间，即该任务是IO密集型的，我们就需要创建比处理器核心数大几倍数量的线程。</p></blockquote><p>计算公式：线程数 =cpu实际线程数/(1 - 阻塞系数)，其中阻塞系数的取值在0和1之间。计算密集型人物的阻塞系数为0，而IO密集型任务的阻塞系数则接近1。</p><p>通用的说，计算密集型的<code>corePoolSize</code>=cpu实际线程数+1</p><p>IO密集型的<code>corePoolSize</code>=cpu实际线程数*5</p><h3 id="queueCapacity"><a href="#queueCapacity" class="headerlink" title="queueCapacity"></a>queueCapacity</h3><p>任务队列的长度要根据核心线程数，以及系统对任务响应时间的要求有关。队列长度计算公式为(corePoolSize/tasktime)*responsetime。</p><p>一般来说，tasktime是0.1，responsetime是2，因此等价于</p><p>queueCapacity=20*corePoolSize</p><h3 id="maxPoolSize"><a href="#maxPoolSize" class="headerlink" title="maxPoolSize"></a>maxPoolSize</h3><p>如果需要最大线程池扩容，则说明任务队列已满。在这种情况下，对于计算密集型的任务，扩容线程池意义不是很大，因为不需要上下文的切换，这种情况下建议增加物理核数；对于IO密集型的任务，说明IO的速度变慢，需要将空闲的cpu资源让给后续的线程，需要增加线程池的容量。</p><p>一般来说，我们设置为core的4倍。</p><p>maxPoolSize=4*corePoolSize</p><h3 id="keepAliveTime"><a href="#keepAliveTime" class="headerlink" title="keepAliveTime"></a>keepAliveTime</h3><p>此参数设置的最大意义是当线程池维持在一个较高的使用率，延长线程存活时间可以有效的提高处理速度，避免无用的创建-销毁线程。</p><p>keepAliveTime = 5*responsetime * corePoolSize</p><h3 id="allowCoreThreadTimeout"><a href="#allowCoreThreadTimeout" class="headerlink" title="allowCoreThreadTimeout"></a>allowCoreThreadTimeout</h3><p>此参数建议维持默认false，不建议核心线程也退出。</p>]]></content>
    
    
    
    <tags>
      
      <tag>java</tag>
      
      <tag>线程池， 多线程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序+mpvue+vant的打开方式</title>
    <link href="/2019/12/20/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-mpvue-vant%E7%9A%84%E6%89%93%E5%BC%80%E6%96%B9%E5%BC%8F/"/>
    <url>/2019/12/20/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-mpvue-vant%E7%9A%84%E6%89%93%E5%BC%80%E6%96%B9%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="微信小程序-mpvue-vant的打开方式"><a href="#微信小程序-mpvue-vant的打开方式" class="headerlink" title="微信小程序+mpvue+vant的打开方式"></a>微信小程序+mpvue+vant的打开方式</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前阵子使用mpvue构建微信小程序，在引入其他框架时出现了一点问题，需要去修改配置，这里给出具体的配置流程。</p><a id="more"></a><h2 id="创建工程"><a href="#创建工程" class="headerlink" title="创建工程"></a>创建工程</h2><p>按照正常流程创建工程</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">vue init mpvue&#x2F;mpvue-quickstart democd demonpm install# 这一步是选择依赖是否在开发环境安装，可根据工程实际情况自行配置npm i vant-weapp -S --production<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="修改webpack"><a href="#修改webpack" class="headerlink" title="修改webpack"></a>修改webpack</h2><p>在项目根目录下找到<code>build/webpack.base.conf.js</code>，在<code>baseWebpackConfig.plugins</code>中添加以下代码</p><div class="code-wrapper"><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token keyword">from</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">'node_modules/vant-weapp/dist'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        to<span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">'dist/wx/vant-weapp/dist'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        ignore<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.*'</span><span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="引入组件"><a href="#引入组件" class="headerlink" title="引入组件"></a>引入组件</h2><p>这里只需要在<code>src/app.json</code>中添加所需要的组件即可，不需要在vue文件中再次import</p><div class="code-wrapper"><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token string">"usingComponents"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token string">"van-button"</span><span class="token operator">:</span> <span class="token string">"vant-weapp/dist/button/index"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><p>实际上思路还是很明确的，微信的npm是自成一体，所以需要把工程中引入的第三方npm包复制到微信的npm中一份。在引入完毕后，在<code>app.json</code>中统一进行组件的引入。</p><p>另外可能出现这样的报错</p><p><img src="image-20191220102739192.png" alt="image-20191220102739192"></p><p>这个时候打开微信的转译就好了，把es6编译成es5</p>]]></content>
    
    
    
    <tags>
      
      <tag>vue</tag>
      
      <tag>微信小程序</tag>
      
      <tag>mpvue</tag>
      
      <tag>vant</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于docker版nginx的几点注意</title>
    <link href="/2019/11/16/%E5%85%B3%E4%BA%8Edocker%E7%89%88nginx%E7%9A%84%E5%87%A0%E7%82%B9%E6%B3%A8%E6%84%8F/"/>
    <url>/2019/11/16/%E5%85%B3%E4%BA%8Edocker%E7%89%88nginx%E7%9A%84%E5%87%A0%E7%82%B9%E6%B3%A8%E6%84%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="关于docker版nginx的几点注意"><a href="#关于docker版nginx的几点注意" class="headerlink" title="关于docker版nginx的几点注意"></a>关于docker版nginx的几点注意</h1><ol><li>在启动nginx时，如果使用<code>-v</code>参数映射了宿主机目录，用来映射配置文件，日志等文件，则需要预先创建好，不然会报文件not found。</li><li>如果在启动时，使用了命令，如<code>nginx -c</code>等，则需要在配置文件种加上<code>daemon off;</code>或者<code>nginx -g &#39;daemon off;&#39;</code>,这使nginx转入后台运行，避免docker启动后因在前台运行导致立刻停机。</li><li>如果在<code>nginx.conf</code>中，配置了路由转发，并且所转发到的服务未使用docker构建，则要使用本机ip或域名访问，不可使用<code>localhost</code>或者<code>127.0.0.1</code>，会导致无法访问（404），因为docker使用的网络默认使docker的内网（bridge）。如果想要使用<code>localhost</code>等，请将<code>network</code>设置为<code>host</code>（<code>--network host</code>）</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>nginx</tag>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用flex制作滚动列表</title>
    <link href="/2019/11/03/%E4%BD%BF%E7%94%A8flex%E5%88%B6%E4%BD%9C%E6%BB%9A%E5%8A%A8%E5%88%97%E8%A1%A8/"/>
    <url>/2019/11/03/%E4%BD%BF%E7%94%A8flex%E5%88%B6%E4%BD%9C%E6%BB%9A%E5%8A%A8%E5%88%97%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="使用flex制作滚动列表"><a href="#使用flex制作滚动列表" class="headerlink" title="使用flex制作滚动列表"></a>使用flex制作滚动列表</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为自己在做一点小东西，所以就有个需求，一个元素里面需要有两个子元素，两个子元素竖排排列，第二个子元素里面的内容不定长，需要做滚动，但第二个元素的高度需要自适应。</p><p>在学习的过程稿发现flex和overflow挺有意思的，特此记录下来。</p><a id="more"></a><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ie=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span> #66ccff</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">*</span> <span class="token punctuation">&#123;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.parent</span> <span class="token punctuation">&#123;</span>      <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>      <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>      <span class="token property">overflow</span><span class="token punctuation">:</span> hidden    <span class="token punctuation">&#125;</span>    <span class="token selector">ul</span> <span class="token punctuation">&#123;</span>      <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">li</span> <span class="token punctuation">&#123;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>      <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><!DOCTYPE html><html lang="en"><head>  <meta charset="UTF-8">  <meta name="viewport" content="width=device-width, initial-scale=1.0">  <meta http-equiv="X-UA-Compatible" content="ie=edge">  <title>Document</title></head><body>  <div class="parent">    <div style="height: 200px; background: #66ccff">标题</div>    <ul>      <li>1</li>      <li>2</li>      <li>3</li>      <li>4</li>      <li>5</li>      <li>6</li>    </ul>  </div>  <style>    * {      padding: 0;      margin: 0;    }    .parent {      display: flex;      flex-direction: column;      height: 500px;      overflow: hidden    }    .parent ul {      overflow: auto;    }    .parent li {      height: 200px;      border: 1px solid #ccc;    }  </style></body></html><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>首先是<code>.parent</code>。将display设置为弹性布局，并且规定了布局方向为竖排，对于溢出元素的处理方式设置为隐藏。这样的情况下，html就会将这个元素里面的布局重置，保证了里面的元素可以自适应高度，不会出现子元素与父元素高度相同的情况，并且对于移除内容进行了隐藏</p><p>第二就是<code>ul</code>。对于其中<code>ul</code>其中的溢出元素做了自动处理，实际上是将溢出元素设置为滚动，这样ul里面的元素就可以进行滚动。</p><p>第三要注意<code>height</code>。如果要求<code>ul</code>为自适应，则height一定为<code>100%</code>（或者<code>inherit</code>）,并且父级元素需要显式的设置高度，不能为<code>auto</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nginx匹配规则</title>
    <link href="/2019/10/17/nginx%E5%8C%B9%E9%85%8D%E8%A7%84%E5%88%99/"/>
    <url>/2019/10/17/nginx%E5%8C%B9%E9%85%8D%E8%A7%84%E5%88%99/</url>
    
    <content type="html"><![CDATA[<h2 id="一、语法规则"><a href="#一、语法规则" class="headerlink" title="一、语法规则"></a>一、语法规则</h2><div class="code-wrapper"><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token keyword">location</span> <span class="token punctuation">[</span><span class="token operator">=</span><span class="token operator">|</span><span class="token operator">~</span><span class="token operator">|</span><span class="token operator">~</span><span class="token operator">*</span><span class="token operator">|</span><span class="token operator">^</span><span class="token operator">~</span><span class="token punctuation">]</span> <span class="token operator">/</span>uri<span class="token operator">/</span> <span class="token punctuation">&#123;</span> … <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><table><thead><tr><th align="center">符&nbsp;号</th><th align="left">含&nbsp;义</th></tr></thead><tbody><tr><td align="center"><code>=</code></td><td align="left">开头表示精确匹配</td></tr><tr><td align="center"><code>^~</code></td><td align="left">开头表示 uri 以某个常规字符串开头，理解为匹配 <code>url</code> 路径即可。<code>nginx</code> 不对 <code>url</code> 做编码，因此请求为<code>/static/20%/aa</code>，可以被规则<code>^~ /static/ /aa</code>匹配到（注意是空格）</td></tr><tr><td align="center"><code>~</code></td><td align="left">开头表示区分大小写的正则匹配</td></tr><tr><td align="center"><code>~*</code></td><td align="left">开头表示不区分大小写的正则匹配</td></tr><tr><td align="center"><code>/</code></td><td align="left">通用匹配，任何请求都会匹配到</td></tr></tbody></table><a id="more"></a><h4 id="多个-location-配置的情况下匹配顺序为"><a href="#多个-location-配置的情况下匹配顺序为" class="headerlink" title="多个 location 配置的情况下匹配顺序为"></a>多个 location 配置的情况下匹配顺序为</h4><blockquote><ul><li>首先匹配 <code>=</code></li><li>其次匹配 <code>^~</code></li><li>其次是按文件中顺序的正则匹配</li><li>最后是交给 / 通用匹配</li><li>当有匹配成功时候，停止匹配，按当前匹配规则处理请求</li></ul></blockquote><div class="code-wrapper"><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token keyword">location</span> <span class="token operator">=</span> <span class="token operator">/</span> <span class="token punctuation">&#123;</span>   <span class="token comment">#规则A</span><span class="token punctuation">&#125;</span><span class="token keyword">location</span> <span class="token operator">=</span> <span class="token operator">/</span>login <span class="token punctuation">&#123;</span>   <span class="token comment">#规则B</span><span class="token punctuation">&#125;</span><span class="token keyword">location</span> <span class="token operator">^</span><span class="token operator">~</span> <span class="token operator">/</span>static<span class="token operator">/</span> <span class="token punctuation">&#123;</span>   <span class="token comment">#规则C</span><span class="token punctuation">&#125;</span><span class="token keyword">location</span> <span class="token operator">~</span> \<span class="token punctuation">.</span><span class="token punctuation">(</span>gif<span class="token operator">|</span>jpg<span class="token operator">|</span>png<span class="token operator">|</span>js<span class="token operator">|</span>css<span class="token punctuation">)</span>$ <span class="token punctuation">&#123;</span>   <span class="token comment">#规则D</span><span class="token punctuation">&#125;</span><span class="token keyword">location</span> <span class="token operator">~</span><span class="token operator">*</span> \<span class="token punctuation">.</span>png$ <span class="token punctuation">&#123;</span>   <span class="token comment">#规则E</span><span class="token punctuation">&#125;</span><span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">&#123;</span>   <span class="token comment">#规则F</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><blockquote><p>那么产生的效果如下：</p><ul><li>访问根目录 /， 比如 <a href="http://localhost/">http://localhost/</a> 将匹配规则 A</li><li>访问 <a href="http://localhost/login">http://localhost/login</a> 将匹配规则 B，<a href="http://localhost/register">http://localhost/register</a> 则匹配规则 F</li><li>访问 <a href="http://localhost/static/a.html">http://localhost/static/a.html</a> 将匹配规则 C</li><li>访问 <a href="http://localhost/a.gif">http://localhost/a.gif</a>, <a href="http://localhost/b.jpg">http://localhost/b.jpg</a> 将匹配规则 D和规则 E，但是规则 D 顺序优先，规则 E不起作用，而 <a href="http://localhost/static/c.png%E5%88%99%E4%BC%98%E5%85%88%E5%8C%B9%E9%85%8D%E5%88%B0%E8%A7%84%E5%88%99">http://localhost/static/c.png则优先匹配到规则</a> C</li><li>访问 <a href="http://localhost/a.PNG">http://localhost/a.PNG</a> 则匹配规则 E，而不会匹配规则 D，因为规则 E 不区分大小写</li><li>访问 <a href="http://localhost/category/id/1111">http://localhost/category/id/1111</a> 则最终匹配到规则 F，因为以上规则都不匹配，这个时候应该是 nginx 转发请求给后端应用服务器，比如 FastCGI（PHP），tomcat（jsp），nginx 作为反向代理服务器存在</li></ul></blockquote><h2 id="二、运用场景"><a href="#二、运用场景" class="headerlink" title="二、运用场景"></a>二、运用场景</h2><h4 id="实际使用中，至少有三个匹配规则定义，如下："><a href="#实际使用中，至少有三个匹配规则定义，如下：" class="headerlink" title="实际使用中，至少有三个匹配规则定义，如下："></a>实际使用中，至少有三个匹配规则定义，如下：</h4><div class="code-wrapper"><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token comment"># 直接匹配网站根，通过域名访问网站首页比较频繁，使用这个会加速处理，官网如是说。</span><span class="token comment"># 这里是直接转发给后端应用服务器了，也可以是一个静态首页</span><span class="token comment"># 第一个必选规则</span><span class="token keyword">location</span> <span class="token operator">=</span> <span class="token operator">/</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>tomcat<span class="token punctuation">:</span><span class="token number">8080</span><span class="token operator">/</span><span class="token keyword">index</span><span class="token punctuation">&#125;</span><span class="token comment"># 第二个必选规则是处理静态文件请求，这是 nginx 作为 http 服务器的强项</span><span class="token comment"># 有两种配置模式，目录匹配或后缀匹配，任选其一或搭配使用</span><span class="token keyword">location</span> <span class="token operator">^</span><span class="token operator">~</span> <span class="token operator">/</span>static<span class="token operator">/</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">root</span> <span class="token operator">/</span>webroot<span class="token operator">/</span>static<span class="token operator">/</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">location</span> <span class="token operator">~</span><span class="token operator">*</span> \<span class="token punctuation">.</span><span class="token punctuation">(</span>gif<span class="token operator">|</span>jpg<span class="token operator">|</span>jpeg<span class="token operator">|</span>png<span class="token operator">|</span>css<span class="token operator">|</span>js<span class="token operator">|</span>ico<span class="token punctuation">)</span>$ <span class="token punctuation">&#123;</span>    <span class="token keyword">root</span> <span class="token operator">/</span>webroot<span class="token operator">/</span>res<span class="token operator">/</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment"># 第三个规则就是通用规则，用来转发动态请求到后端应用服务器</span><span class="token comment"># 非静态文件请求就默认是动态请求，自己根据实际把握</span><span class="token comment"># 毕竟目前的一些框架的流行，带.php、.jsp后缀的情况很少了</span><span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>tomcat<span class="token punctuation">:</span><span class="token number">8080</span><span class="token operator">/</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    
    <tags>
      
      <tag>nginx</tag>
      
      <tag>服务器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux常用命令</title>
    <link href="/2019/10/17/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2019/10/17/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<p>内存资源最多的前 10 个进程</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ps -auxf | sort -nr -k 4 | head -10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p> CPU 资源最多的前 10 个进程 </p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ps -auxf | sort -nr -k 3 | head -10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>find在根目录下根据文件名查找</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">find &#x2F; -name 文件名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><a id="more"></a><h3 id="NGINX-一般目录"><a href="#NGINX-一般目录" class="headerlink" title="NGINX 一般目录"></a>NGINX 一般目录</h3><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 启动文件&#x2F;usr&#x2F;src&#x2F;nginx&#x2F;sbin&#x2F;nginx# 配置文件&#x2F;usr&#x2F;src&#x2F;nginx&#x2F;conf&#x2F;nginx.conf# 日志目录&#x2F;usr&#x2F;src&#x2F;nginx&#x2F;logs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="SSH-KEY-生成"><a href="#SSH-KEY-生成" class="headerlink" title="SSH KEY 生成"></a>SSH KEY 生成</h3><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ssh-keygen -t rsa -C &quot;your_email@example.com&quot;# 三连回车ssh-agent -seval &#96;ssh-agent -s&#96;ssh-add ~&#x2F;.ssh&#x2F;id_rsa<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="建立swap分区"><a href="#建立swap分区" class="headerlink" title="建立swap分区"></a>建立swap分区</h3><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#1.创建要作为swap分区的文件:增加1GB大小的交换分区，则命令写法如下，其中的count等于想要的块的数量（bs*count&#x3D;文件大小）。dd if&#x3D;&#x2F;dev&#x2F;zero of&#x3D;&#x2F;root&#x2F;swapfile bs&#x3D;1M count&#x3D;1024#2.格式化为交换分区文件:mkswap &#x2F;root&#x2F;swapfile#3.启用交换分区文件:swapon &#x2F;root&#x2F;swapfile#4.使系统开机时自启用，在文件&#x2F;etc&#x2F;fstab中添加一行：echo &quot;&#x2F;root&#x2F;swapfile swap swap defaults 0 0&quot; &gt;&gt;&#x2F;etc&#x2F;fstab<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器自动部署脚本</title>
    <link href="/2019/09/10/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E8%84%9A%E6%9C%AC/"/>
    <url>/2019/09/10/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<h1 id="服务器自动部署脚本"><a href="#服务器自动部署脚本" class="headerlink" title="服务器自动部署脚本"></a>服务器自动部署脚本</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>自搭服务器需要自动打包部署流程，写了个脚本，备忘。</p><p>没有特殊需求直接放在工程根目录下就可以。</p><a id="more"></a><h2 id="SHELL脚本"><a href="#SHELL脚本" class="headerlink" title="SHELL脚本"></a>SHELL脚本</h2><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#!&#x2F;usr&#x2F;bin&#x2F;env bash# 刷新环境变量source &#x2F;etc&#x2F;profile# [$1]会作为git的分支信息处理# 工程路径, 绝对路径dirPath&#x3D;&#39;DIR_PATH&#39;# 项目名称appName&#x3D;&#39;PROJECT_NAME&#39;# 端口号, 会根据端口号关闭进程port&#x3D;8080############# 工具方法 ################################ 自动stash，如果存在更改的内容function autoStash() &#123;  if [ &quot;$(git status --porcelain | wc -l)&quot; -gt 0 ]  then    git stash push -m &quot;auto stash at: $(date)&quot;  fi&#125;## 非阻塞延迟2-3秒function delay() &#123;  echo &quot;loading...&quot;  ti1&#x3D;$(date +%s)    #获取时间戳  ti2&#x3D;$ti1  while [[ &quot;$((ti2 - ti1 ))&quot; -le 2 ]]  do  ti2&#x3D;$(date +%s)  done&#125;###################################################     start to run application                   #################################################### 拉取新代码并打包if $dirPath then cd $dirPathfi# 自动stashautoStash# 支持外部传递分支名称，没有则按当前默认分支处理if [ -n &quot;$1&quot; ] &amp;&amp; [ &quot;$1&quot; !&#x3D; &quot;$(git branch --show-current)&quot; ]then  branch&#x3D;$1  git checkout &quot;$branch&quot;  git pull origin &quot;$branch&quot;else  git pullfimvn clean package -U -DskipTests&#x3D;true# 根据端口号查询对应的pid，并删除服务进程pid&#x3D;$(netstat -nlp | grep :$port | awk &#39;&#123;print $7&#125;&#39; | awk -F&quot;&#x2F;&quot; &#39;&#123; print $1 &#125;&#39;);echo &quot;$pid&quot;if [  -n  &quot;$pid&quot;  ];  then    kill  -9  &quot;$pid&quot;;fi# 删除老文件，复制新文件rm $dirPath&#x2F;app&#x2F;$appName.jar -frm $dirPath&#x2F;logs&#x2F;$appName.log -fmv .&#x2F;target&#x2F;app.jar .&#x2F;target&#x2F;$appName.jar# 启动项目cd $dirPath&#x2F; || mkdir logs || exitnohup java -jar -Xms512m -Xmx1024m \ .&#x2F;target&#x2F;$appName.jar &gt; .&#x2F;logs&#x2F;$appName.log 2&gt;&amp;1 &amp;# 添加一点延迟，等待日志文件创建，避免tail失败delaytail -f .&#x2F;logs&#x2F;$appName.log -n 200<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="maven打包配置"><a href="#maven打包配置" class="headerlink" title="maven打包配置"></a>maven打包配置</h2><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>finalName</span><span class="token punctuation">></span></span>app<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>finalName</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/**<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.sh<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-resources-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nonFilteredFileExtensions</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nonFilteredFileExtension</span><span class="token punctuation">></span></span>xlsx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nonFilteredFileExtension</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nonFilteredFileExtension</span><span class="token punctuation">></span></span>xls<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nonFilteredFileExtension</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nonFilteredFileExtension</span><span class="token punctuation">></span></span>ttf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nonFilteredFileExtension</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nonFilteredFileExtension</span><span class="token punctuation">></span></span>ttc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nonFilteredFileExtension</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nonFilteredFileExtensions</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoding</span><span class="token punctuation">></span></span>$&#123;project.build.sourceEncoding&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoding</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-javadoc-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>skip</span><span class="token punctuation">></span></span>$&#123;maven.javadoc.skip&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>skip</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>attach-javadocs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>phase</span><span class="token punctuation">></span></span>package<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>phase</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">></span></span>jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>additionalOptions</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>additionalOption</span><span class="token punctuation">></span></span>                                -Xdoclint:none                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>additionalOption</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>additionalOptions</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>skip</span><span class="token punctuation">></span></span>$&#123;maven.springboot.skip&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>skip</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">></span></span>repackage<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-surefire-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*Test.java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*Spec.java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    
    <tags>
      
      <tag>java</tag>
      
      <tag>服务器</tag>
      
      <tag>springboot</tag>
      
      <tag>ops</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Gitlab的specificRunner安装与注册</title>
    <link href="/2019/08/26/Gitlab%E7%9A%84specificRunner%E5%AE%89%E8%A3%85%E4%B8%8E%E6%B3%A8%E5%86%8C/"/>
    <url>/2019/08/26/Gitlab%E7%9A%84specificRunner%E5%AE%89%E8%A3%85%E4%B8%8E%E6%B3%A8%E5%86%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="Gitlab的specificRunner安装与注册"><a href="#Gitlab的specificRunner安装与注册" class="headerlink" title="Gitlab的specificRunner安装与注册"></a>Gitlab的specificRunner安装与注册</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这里使用docker版本的specificRunner，以下命令可直接使用。</p><p>注册时必须须替换<code>url</code>和 <code>registration-token</code>，其他项可按需求更改。</p><a id="more"></a><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><ol><li><p>拉下最新版本镜像</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker pull gitlab&#x2F;gitlab-runner<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>启动启动容器</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker run -d --name gitlab-runner --restart always \  -v &#x2F;srv&#x2F;gitlab-runner&#x2F;config:&#x2F;etc&#x2F;gitlab-runner \  -v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock \  gitlab&#x2F;gitlab-runner:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>runner注册</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker exec -it gitlab-runner gitlab-runner register \  --non-interactive \  --executor &quot;docker&quot; \  --docker-image alpine:latest \  --url &quot;https:&#x2F;&#x2F;gitlab.com&#x2F;&quot; \  --registration-token &quot;PROJECT_REGISTRATION_TOKEN&quot; \  --description &quot;docker-runner&quot; \  --tag-list &quot;docker&quot; \<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><code>url</code>和 <code>registration-token</code>是在Gitlab的CI/CD页面</p><p><img src="1566811661513.png" alt="1566811661513"></p></li><li><p>检查注册是否成功</p><p><img src="1566811779484.png" alt="1566811779484"></p><p>绿色代表注册成功。</p><p><img src="1566811872456.png" alt="1566811872456"></p><p>如果ip与本机不同，不用担心，这是gitlab分配的地址，可以正常调用。</p></li><li><p>查看日志</p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker logs -f gitlab-runner<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>如果是虚拟机中的docker，则需要将虚拟机挂在到物理网络才可以连接。否则虽然虚拟机中的runner可以注册到gitlab，但gitlab无法访问</p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>脚本,随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>针对业务场景的解决方案</title>
    <link href="/2019/08/15/%E9%92%88%E5%AF%B9%E4%B8%9A%E5%8A%A1%E5%9C%BA%E6%99%AF%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <url>/2019/08/15/%E9%92%88%E5%AF%B9%E4%B8%9A%E5%8A%A1%E5%9C%BA%E6%99%AF%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<h1 id="针对业务场景的解决方案"><a href="#针对业务场景的解决方案" class="headerlink" title="针对业务场景的解决方案"></a>针对业务场景的解决方案</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​        这是一个系列专题，是根据我所经历的具体的业务场景所用到的解决方案和技术架构设计的一个汇总。</p><p>​        一方面是对一直以来的经历做一个总结，在以后做项目的时候有一个基础的想法。</p><p>​        另一方面是秉承这开源的精神，希望大家在接到甲方爸爸的需求时候，起码一个基本的解决方案的思路方向，不至于心里没底。</p><p>​        如果针对某一场景，在以后的工作中有更好的解决方案，我也会更新进来并说明原因及优劣。</p><a id="more"></a><h2 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h2><p>​        基础篇包括表设计原则，API设计原则，工程结构设计原则，事务设计原则</p><h3 id="表设计原则"><a href="#表设计原则" class="headerlink" title="表设计原则"></a>表设计原则</h3><h4 id="锁的设计"><a href="#锁的设计" class="headerlink" title="锁的设计"></a>锁的设计</h4><p>​        乐观锁和悲观锁都是经常使用的锁，现在大多使用的都是乐观锁，悲观锁由于其特性（一人编辑，其他人无法做任何操作，包括查看）很少被使用，这里不作赘述，现在主要是对于锁存在的情况下，异步更新数据所引发的问题。</p><blockquote><p>场景：</p><p>​        在一个订单系统中，用到的数据库是TiDB，采用乐观锁。订单在提交后，需要将数据导出到外部系统，并且在外部系统生成外部系统订单号，由于外部系统的响应时间不确定，因此需要做成异步。</p><p>问题：</p><p>​        由于TiDB的默认事务级别是<code>快照隔离</code>，并不是他文档上描述的<code>可重复读</code>。因此在主线程事务没有提交时，异步线程开启，此时主线程的事务还未提交，这时候订单的版本号并不是最新的，如果异步事务根据这个版本号更新，则会发生无法更新的异常，异步事务直接结束。</p><p>解决：</p><p>​        订单增加回传状态flag相关字段，并将异步回传的事务提取出来，与订单能正常提交的事务拆开，两个事务放在controller层。在确定订单提交事务的提交后，再进行异步事务。是否成功更新回传flag。</p><p>预防：</p><p>​        两手准备：</p><ol><li>应把异步字段单独提取出来形成一张表，表中不应含有锁字段<code>版本号</code>。这样可以解决锁的问题</li><li>在调用异步方法时，应直接传入最新的对象，不应传入对象的主键ID在再异步方法中查出数据。这样可以解决数据库隔离级别的问题。</li></ol></blockquote><h4 id="字段的设计"><a href="#字段的设计" class="headerlink" title="字段的设计"></a>字段的设计</h4><p>​        对于业务单据来说，字段主要分为两大类：<code>状态字段</code>、<code>值字段</code>、<code>管控维度字段</code>。状态字段包括新建状态，提交状态等；值字段包括金额，数量等；管控维度字段包括公司，业务实体，采购组织等。</p><blockquote><p>状态字段：</p><p>​        状态字段需要记录三点：状态FLAG，状态操作人，状态操作时间</p><p>​        如果头状态需要根据行状态算出来，则要根据具体业务判断头状态是设置FLAG还是CODE</p><p>​        状态需要分为状态CODE和状态FLAG，某种状态可以结合当前状态及标志位算出来。头状态的数量一般为``行状态数量阶乘-1(n!-1)`注意不要落下。</p><p>​        状态操作人如果有多个，建议做成行转列，之后进行扩展也比较容易。</p><p>值字段：</p><p>​        值字段包括金额，数量等，这些在数据库中要注意小数点位数，java中注意要中BigDeciaml类型，防止精度丢失。</p><p>管控维度字段：</p><p>​        管控维度字段比较有争议的地方就是应该放在头上还是行上。这里需要看业务的具体要求和单据类型。以采购订单为例，供应商自然是要放在头上的，而物料肯定是要放在行上的。</p><p>​        然后是头行上都有管控字段。这种情况一定要和产品商量好，如果行上字段的数据不一致，头应该怎么处理。举个订单上税率的例子，行上有税率（行税率），头上有税率（头税率），当行税率不一致，头税率怎么取（整张订单该以何种税率结算？）</p><p>​        还有一点就是冗余设计。这种字段一般都配有code和name，是否需要在当前业务表上冗余这些字段，则要看单据是否要存储当前时间点信息，则需要冗余；如果要和管控字段的实时信息一致，则不要冗余。</p></blockquote><h3 id="API设计原则"><a href="#API设计原则" class="headerlink" title="API设计原则"></a>API设计原则</h3><p>API需要符合restful设计原则，这里对restful不作解释，只对细节作一些说明。</p><h4 id="API连接符"><a href="#API连接符" class="headerlink" title="API连接符"></a>API连接符</h4><blockquote><p>eg. PUT /v1/{orderId}/batch-enable</p><p>这是一个简单的restful风格的API，其中有几点需要作下说明</p><ol><li>连字符需要用中划线<code>-</code>，不要使用batchCreate因为使用驼峰某些古老的浏览器不支持。下划线也不要使用，URL中的hostname不允许使用下划线，统一风格使用<code>-</code>；而且用户体验不好（只按-键和shift+-键哪个更简单一点？）。</li><li>最好是加上版本号控制<code>/v1</code>，以后如果升级大版本可以直接<code>v2</code>，对外兼容性好，不需要再改动原本url</li><li>启用禁用功能不要让外部传递flag，而应该是系统暴露启用禁用端口。</li></ol></blockquote><h3 id="工程结构设计原则"><a href="#工程结构设计原则" class="headerlink" title="工程结构设计原则"></a>工程结构设计原则</h3><p>使用DDD工程结构，可查看<a href="https://yukdawn.gitee.io/2019/07/28/DDD%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%EF%BC%88%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%EF%BC%89/"><strong>DDD项目结构（领域驱动设计）</strong></a>。方法封装粒度按照infra-&gt;domain-&gt;app的顺序从低到高。</p><h3 id="事务设计原则"><a href="#事务设计原则" class="headerlink" title="事务设计原则"></a>事务设计原则</h3><p>主要是两点，默认事务与独立事务，独立事务需要谨慎使用。</p>]]></content>
    
    
    
    <tags>
      
      <tag>解决方案</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DDD项目结构（领域驱动设计）</title>
    <link href="/2019/07/28/DDD%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%EF%BC%88%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%EF%BC%89/"/>
    <url>/2019/07/28/DDD%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%EF%BC%88%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="DDD项目结构（领域驱动设计）"><a href="#DDD项目结构（领域驱动设计）" class="headerlink" title="DDD项目结构（领域驱动设计）"></a>DDD项目结构（领域驱动设计）</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>DDD项目结构（领域驱动设计）这种工程结构模型我接触了一年多，虽然每个人都有不同的理解，不过相比于MVC的工程结构，对于代码结构的清晰度，还有业务逻辑的分层方面，DDD都是优于MVC的。</p><p>尽管每个人对DDD模型的理解不同，但大家的思路总归是一致的（api、app、domain、infra），争议之处在于一些包放置的层级以及代码分层。</p><p>因此这里记录了对DDD工程结构的理解，以后我会不定期更新。</p><p>互相分享，互相学习。</p><a id="more"></a><h2 id="总体概览"><a href="#总体概览" class="headerlink" title="总体概览"></a>总体概览</h2><p>先晒出工程目录：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">├─ api│   ├─ controller│   ├─ dto├─ app│   ├─ service│   │  └─ impl├─ domain│   ├─ entity│   ├─ service│   │  └─ impl│   ├─ repository│   │  └─ impl│   ├─ vo├─ infra│   ├─ config│   ├─ constant│   ├─ util│   ├─ mappper│   ├─ feign<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>我会从下到上依次进行说明。</p><h2 id="infra（基础设施层）"><a href="#infra（基础设施层）" class="headerlink" title="infra（基础设施层）"></a>infra（基础设施层）</h2><p>infra主要负责基础资源的定义。</p><p>基础资源常见类型为以下几种：</p><ul><li>config</li><li>constant</li><li>utils</li><li>mapper</li><li>feign</li></ul><p>这里涉及到一个问题，什么是基础资源？</p><p>基础资源指的是工程用到的工具类、配置类、常量类（枚举类）、获取数据的接口（包括从数据库中获取数据的mapper层和从外部接口获取数据的feign层）。</p><p>基础资源构成了工程的骨架和常用工具，一个工程只有骨架（config，mapper，feign）齐全，工具（constant， utils）完备，才能正常进行开发。</p><h2 id="domain（领域层）"><a href="#domain（领域层）" class="headerlink" title="domain（领域层）"></a>domain（领域层）</h2><p>领域层是整个DDD模型的核心，是上层（app层）和下层（infra层）的桥梁</p><p>领域层主要分为三个包</p><ul><li>entity</li><li>repository</li><li>service</li><li>vo</li></ul><p><code>entity</code>对应的是实体层，也是业务对象的核心，数据库中表映射的对象就是实体类。</p><p>entity的基础意义是作为数据库表映射的<code>实体对象</code>。允许存在对实体类属性操作的封装方法。</p><p>比如说，现在有需求对这个实体进行一个取消操作。取消操作需要设置cancelFlag=0，并且设置取消日期和操作人。这时就可以对这个取消操作封装成一个方法。</p><p><code>repository</code>层对应的是资源库层，代表<code>对资源的操作</code>。在DDD模型中，mapper层仅能代表和数据库的交互操作，而DDD中资源这个概念并不仅仅指的是数据库的数据，还包括网络资源（http）和文件资源等。</p><p>并且业务逻辑中，最常见的是头行结构的业务数据，可在repository层进行头行操作的业务逻辑封装。</p><p>service层这里指的是<code>领域service层</code>（domain），并非是<code>应用service层</code>（app）。</p><p>这里的service层是对业务操作进行一个粗粒度的封装，但不是完全封装。完全封装是应用service层要做的事。</p><p>举个例子：有一个订单系统，有自动审批配置，如果自动审批开启，则要在订单提交后进行自动审批。</p><p>领域service层要做的就是封装两个方法，提交和审批方法，而判断是否进行自动审批，则应该交给应用service层去做</p><p>VO只负责数据流转，没有处理逻辑，负责对网络资源，数据库资源进行接收</p><h2 id="app（事务层）"><a href="#app（事务层）" class="headerlink" title="app（事务层）"></a>app（事务层）</h2><p>app层处理实际需求，进行事务控制，流程调度。</p><p>只有一层</p><ul><li>service</li></ul><p>app层需要对domain层，infra层的接口进行调用，并且要求实现对业务逻辑的完全封装（例如在domain层举的订单系统审批例子）。</p><p>另外，是否需要事务控制则需要根据需求进行具体分析</p><h2 id="api（接口层）"><a href="#api（接口层）" class="headerlink" title="api（接口层）"></a>api（接口层）</h2><p>api层做接口。负责与外界的数据交互。</p><p>api层主要分为两个包</p><ul><li>controller</li><li>dto</li></ul><p>controller层是整个系统和外部交互的端口，因此权限控制，资源访问方法控制（GET、POST、PUT、DELETE）、数据校验控制，数据防篡改控制，都要在这一层做</p><p>dto层则是负责接收外部系统传递的数据。</p><p>对于权限控制和数据控制方面，可在infra层定义相关的拦截器进行处理，controller层仅需要增加校验注解。这一层要尽可能的轻。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>在这种工程结构下，DTO的作用实际上是被严重弱化了，仅仅起到了一个接收数据的作用。</p><p>还有事务方面，repository和domain是一定要加事务控制的，app则要根据具体业务逻辑来做。</p><p>之前接过一个需求，要求订单生成完毕后传入另一个系统，无论另一个系统返回什么都要生成订单，此时app层就需要做独立事务处理，因此是否要求事务控制之还是要看实际应用场景是什么。</p><p>另外还有数据库事务隔离级别的问题，比如mysql的默认级别是可重复读（使用mvcc的方式控制版本），tidb的默认级别是快照隔离，也因此被坑过。不过这个不在本文讨论范围之内，只是要强调事务控制要看具体场景，脱离实际应用都是空谈。</p>]]></content>
    
    
    <categories>
      
      <category>工程结构</category>
      
      <category>spring</category>
      
      <category>微服务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工程结构,DDD</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MyBatis拦截器--从基础到与Spring Boot整合</title>
    <link href="/2019/07/28/MyBatis%E6%8B%A6%E6%88%AA%E5%99%A8--%E4%BB%8E%E5%9F%BA%E7%A1%80%E5%88%B0%E4%B8%8ESpring%20Boot%E6%95%B4%E5%90%88/"/>
    <url>/2019/07/28/MyBatis%E6%8B%A6%E6%88%AA%E5%99%A8--%E4%BB%8E%E5%9F%BA%E7%A1%80%E5%88%B0%E4%B8%8ESpring%20Boot%E6%95%B4%E5%90%88/</url>
    
    <content type="html"><![CDATA[<h3 id="MyBatis拦截器–从基础到与Spring-Boot整合"><a href="#MyBatis拦截器–从基础到与Spring-Boot整合" class="headerlink" title="MyBatis拦截器–从基础到与Spring Boot整合"></a>MyBatis拦截器–从基础到与Spring Boot整合</h3><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>MyBatis拦截器是Java持久层框架，最近在研究拦截器的写法。本以为会很复杂，实际上从使用上来说，是很简单的。</p><p>本文主要介绍的时各个<strong>方法</strong>和<strong>注解</strong>的<code>含义</code>及<code>使用方式</code>，并且与springboot进行简单的整合。</p><a id="more"></a><p>话不多说，开始说明。</p><h4 id="关于拦截器"><a href="#关于拦截器" class="headerlink" title="关于拦截器"></a>关于拦截器</h4><p>Mybatis拦截器的写法很简单，需要继承<code>Interceptor</code>类，重写其中的<code>intercept()</code>、<code>plugin()</code>、<code>setProperties()</code>。</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>plugin</span><span class="token punctuation">;</span><span class="token comment">//import ingnore</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Interceptor</span> <span class="token punctuation">&#123;</span>  <span class="token class-name">Object</span> <span class="token function">intercept</span><span class="token punctuation">(</span><span class="token class-name">Invocation</span> invocation<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span><span class="token punctuation">;</span>  <span class="token class-name">Object</span> <span class="token function">plugin</span><span class="token punctuation">(</span><span class="token class-name">Object</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">void</span> <span class="token function">setProperties</span><span class="token punctuation">(</span><span class="token class-name">Properties</span> properties<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>具体如下：</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Intercepts</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Signature</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">Executor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token string">"query"</span><span class="token punctuation">,</span> args <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">MappedStatement</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">RowBounds</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">ResultHandler</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserAuthorityDataInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">Interceptor</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">intercept</span><span class="token punctuation">(</span><span class="token class-name">Invocation</span> invocation<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> invocation<span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">plugin</span><span class="token punctuation">(</span><span class="token class-name">Object</span> target<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">Plugin</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setProperties</span><span class="token punctuation">(</span><span class="token class-name">Properties</span> properties<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>这是先说方法，再说注解</p><h5 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h5><ul><li><p><code>setProperties()</code>方法主要是用来从配置中获取属性。</p><p>如果是使用xml式配置拦截器，可在Mybatis配置文件中添加节点，属性可以以如下方式传递</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span> <span class="token attr-name">interceptor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tk.mybatis.simple.plugin.XXXInterceptor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>propl<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>valuel<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>prop2<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>value2<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>如果在<code>Spring boot</code>中使用，则需要单独写一个配置类，如下：</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MybatisMapperAutoConfiguration</span><span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">zipkinInterceptor</span><span class="token punctuation">(</span><span class="token class-name">SqlSessionFactory</span> sqlSessionFactory<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ZipkinInterceptor</span> zipkinInterceptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZipkinInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Properties</span> properties <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"prop1"</span><span class="token punctuation">,</span><span class="token string">"value1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        zipkinInterceptor<span class="token punctuation">.</span><span class="token function">setProperties</span><span class="token punctuation">(</span>properties<span class="token punctuation">)</span><span class="token punctuation">;</span>        sqlSessionFactory<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span>zipkinInterceptor<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>如果说<strong>不需要配置属性</strong>，则在<code>spring boot</code>中，不需要去编写配置类，只需要像我一样在拦截器上加个<code>@Component</code>即可。</p></li><li><p><code>plugin()</code>方法用于指定哪些方法可以被此拦截器拦截。如下：</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">plugin</span><span class="token punctuation">(</span><span class="token class-name">Object</span> target<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token keyword">instanceof</span> <span class="token class-name">Executor</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//表明只有Executor方法才会执行这个拦截器内的intercept()</span>        <span class="token keyword">return</span> <span class="token class-name">Plugin</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> target<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><code>Plugin.wrap()</code>是个包装方法，如果需要此拦截器，则将此此拦截器连同入参中的<code>target</code>一起包装后返回，如果不需要则直接返回<code>target</code></p><p>另附具体<code>Plugin.wrap()</code>的源码：</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">wrap</span><span class="token punctuation">(</span><span class="token class-name">Object</span> target<span class="token punctuation">,</span> <span class="token class-name">Interceptor</span> interceptor<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span><span class="token punctuation">,</span> <span class="token class-name">Set</span><span class="token punctuation">&lt;</span><span class="token class-name">Method</span><span class="token punctuation">></span><span class="token punctuation">></span></span> signatureMap <span class="token operator">=</span> <span class="token function">getSignatureMap</span><span class="token punctuation">(</span>interceptor<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> type <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> interfaces <span class="token operator">=</span> <span class="token function">getAllInterfaces</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> signatureMap<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>interfaces<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span>        type<span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        interfaces<span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">Plugin</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> interceptor<span class="token punctuation">,</span> signatureMap<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> target<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p><code>intercept()</code>方法是用来对拦截的<code>sql</code>进行具体的操作。</p><p>这里拿分页插件<code>PageHelper</code>中的类<code>PageInterceptor</code>进行说明。</p><p>坐标：<code>com.github.pagehelper.PageInterceptor#intercept(Invocation)</code></p><p><img src="1543743905576.png" alt="1543743905576"></p><ol><li><p><code>invocation.getArgs()</code>是从入参<code>invocation</code>获取拦截器所拦截方法的参数，其参数顺序和<strong>被拦截的方法</strong>保持一致，这个<strong>参数的个数</strong>以及<strong>参数具体是什么</strong>我们下一步说到<code>@Signature</code>注解时会讲。</p></li><li><p>获取执行器，可以用<code>Executor</code>直接执行被我们修改过的sql，示例如下</p><p><img src="1543744369471.png" alt="1543744369471"></p><p>这里就是不继续执行原来的方法体中的内容，而是去执行我们修改后的sql并且返回。</p></li><li><p>关于返回值</p><p>除了以上这种直接去执行我们修改过sql的方式，如果我们想让方法继续执行下去也是可以的。</p><p>只需要返回：</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">return</span> invocation<span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li></ol></li></ul><h5 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h5><p><code>MyBatis</code>拦截器用到了两个注解：<code>@Intercepts</code>和<code>@Signature</code></p><ul><li><p><code>@Intercepts</code></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Documented</span><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>TYPE<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Intercepts</span> <span class="token punctuation">&#123;</span>  <span class="token class-name">Signature</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>可以看到，其中是一个<code>Signature</code>类型的数组，意味着一个拦截器可以拦截多种方法。</p></li><li><p><code>@Signature</code></p><p><strong>Signature</strong>意为<strong>签名，署名</strong>。实际上作用也与语义相同：表明需要拦截方法的方法签名。</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Documented</span><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Signature</span> <span class="token punctuation">&#123;</span>  <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> <span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token class-name">String</span> <span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">args</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>有三个参数，</p><ul><li><code>type</code>：类型</li><li><code>method</code>：方法名称</li><li><code>args</code>：方法参数</li></ul><p>这三个参数可以确定一个方法。默认情况下， <code>MyBatis</code>允许使用插件（拦截器）来拦截的接口和包括以下几个。</p><ul><li>Executor ( update 、 query 、 flushStatements 、 commit 、 rollback 、 get Transaction、 close、 isClosed)</li><li>ParameterHandler ( getParameterObj ect、setParameters)</li><li>ResultSetHandler ( handleResul tSets 、 handleCursorResultSets 、 handleOutputParameters)</li><li>StatementHandler (prepare、 parameterize、 batch、 update、 query)</li></ul><p>实际上，我们只需要记住这几个接口名称就可以，其余我们可以根据实际需要去看源码来确定具体所需要拦截的类。</p><ul><li>以<code>Executor</code>的<code>query</code>方法举例说明<code>@Signature</code>是如何确定一个方法。</li></ul><p><img src="1543745710452.png" alt="1543745710452"></p><p>如果我们需要拦截第一个方法，只需要这么写<code>@Signature</code></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Signature</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">Executor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token string">"query"</span><span class="token punctuation">,</span> args <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">MappedStatement</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">RowBounds</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">ResultHandler</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">CacheKey</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">BoundSql</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>可以注意看，<code>type</code>的值与<strong>类名</strong>相同，<code>method</code>与<strong>方法名</strong>相同，为了避免方法重载，<code>args</code>中指定了<strong>各个参数的类型和个数</strong>。</p><ul><li><p>如果我们想拦截多个方法，比如说上图1和2的方法我们都想拦截到，只需要再加个<code>@Signature</code>就可以，要记得<code>@Intercepts</code>的value可是数组啊</p></li><li><div class="code-wrapper"><pre><code class="java">@Intercepts(    &#123;        @Signature(type = Executor.class, method = &quot;query&quot;, args = &#123;MappedStatement.class, Object.class, RowBounds.class, ResultHandler.class&#125;),        @Signature(type = Executor.class, method = &quot;query&quot;, args = &#123;MappedStatement.class, Object.class, RowBounds.class, ResultHandler.class, CacheKey.class, BoundSql.class&#125;),    &#125;)<pre class="line-numbers language-none"><code class="language-none">#### 与Spring Boot整合与Spring Boot整合这一块就简单许多，有两种方法，其实在上文中已有交代1. 手写一个配置类   &#96;&#96;&#96;java   @Configuration   public class MybatisMapperAutoConfiguration&#123;       @Bean       public void zipkinInterceptor(SqlSessionFactory sqlSessionFactory) &#123;           ZipkinInterceptor zipkinInterceptor &#x3D; new ZipkinInterceptor();           Properties properties &#x3D; new Properties();           properties.setProperty(&quot;prop1&quot;,&quot;value1&quot;);           zipkinInterceptor.setProperties(properties);           sqlSessionFactory.getConfiguration().addInterceptor(zipkinInterceptor);       &#125;   &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></code></pre></li></ul></li></ul><ol start="2"><li><p>在拦截器上加<code>@Component</code>注解</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Intercepts</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Signature</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">Executor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token string">"query"</span><span class="token punctuation">,</span> args <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">MappedStatement</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">RowBounds</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">ResultHandler</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserAuthorityDataInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">Interceptor</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></li></ol><h4 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h4><p>在mybatis的xml文件中，使用的是ognl语法，然而在mybatis中new的变量，因类加载器不同，会导致<code>equals</code>或<code>==</code>永远是<code>false</code>，需要注意。</p><h4 id="资料参考"><a href="#资料参考" class="headerlink" title="资料参考"></a>资料参考</h4><p>《MyBatis从入门到精通》——<strong>刘增辉</strong>（PageHelper作者）</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
